[
    {
        "id": "fc4bfaedf35c3def",
        "type": "tab",
        "label": "Introduction",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "bf7dcf36ee1b438a",
        "type": "tab",
        "label": "TiddlyWiki",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "bebfd65af56181fb",
        "type": "tab",
        "label": "Utilities",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a10937a730662247",
        "type": "tab",
        "label": "Project Managment",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "faf664cead0da5c0",
        "type": "tab",
        "label": "Topics",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8a1cb15d54e1d437",
        "type": "tab",
        "label": "experiments",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f7464a8f5cc4e442",
        "type": "group",
        "z": "bf7dcf36ee1b438a",
        "name": "\\n Returns a few tiddlers in response to the topic 'hello' \\n  A 'TW client in' will always be followed by a switch node \\n to select the flow based on msg.topic \\n  \\n In TiddlyWiki :",
        "style": {
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "f851efef43d004c1",
            "c95074a4d7aa6070"
        ],
        "x": 12,
        "y": 19,
        "w": 1162,
        "h": 448,
        "info": "# Example of Tiddlywiki Request\r\n\r\n"
    },
    {
        "id": "4a7e4defec73ba6f",
        "type": "group",
        "z": "bebfd65af56181fb",
        "name": "Copy tiddlers between wikis \\n based on a TW filter",
        "style": {
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "993d54c6cf885765",
            "6d2d1c8d4392ab63",
            "dd522ad1161a9409",
            "806c3c792358ec5d",
            "1f7637546d8123da",
            "fba8dd555091b6c4",
            "1a263a9f962d3821"
        ],
        "x": 34,
        "y": 677,
        "w": 682,
        "h": 304
    },
    {
        "id": "71a36a243127bc83",
        "type": "group",
        "z": "bebfd65af56181fb",
        "name": "Get tiddlers from wiki into msg.payload \\n based on a TW filter",
        "style": {
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "d528fcb60dc1777c",
            "666f8d5dc621b69a",
            "30c30623bbe8a2a5",
            "392997baab3d83a3",
            "f0e0ccc0654b9fac"
        ],
        "x": 54,
        "y": 337,
        "w": 642,
        "h": 304
    },
    {
        "id": "7cf576bc81702e1e",
        "type": "group",
        "z": "a10937a730662247",
        "style": {
            "stroke": "#2b2b2b",
            "stroke-opacity": "1",
            "fill": "#181818",
            "fill-opacity": "0.5",
            "label": true,
            "label-position": "nw",
            "color": "#cccccc"
        },
        "nodes": [
            "f7f87f739520cf6c",
            "612dd97f9803d988",
            "d7e3072a8dfa19ac",
            "784f277fe4392287",
            "5c9d161d5c1e5c04",
            "6dbe0d95eac94002"
        ],
        "x": 24,
        "y": 221,
        "w": 1012,
        "h": 326
    },
    {
        "id": "d2dcbc414bb67695",
        "type": "group",
        "z": "a10937a730662247",
        "name": " The sender tiddler must set fields required to execute the command \\n See 'check fields' for the fields needed \\n ",
        "style": {
            "label": true,
            "label-position": "s"
        },
        "nodes": [
            "7c6203be90f13919"
        ],
        "x": 268,
        "y": 13,
        "w": 644,
        "h": 174
    },
    {
        "id": "a7c5d113bcde7caa",
        "type": "group",
        "z": "bf7dcf36ee1b438a",
        "name": "\\n Send contents of a file on the server as a tiddler",
        "style": {
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "37dfe29593404c76",
            "ddec69f95434e42a",
            "694cb905ee221edc",
            "9e9d7d5d6677e99e",
            "dbbdc46edaf683d5",
            "cd36b1e25870ed26",
            "c52a028d6325044e"
        ],
        "x": 124,
        "y": 497,
        "w": 912,
        "h": 310
    },
    {
        "id": "13637ad3fcc72fea",
        "type": "group",
        "z": "fc4bfaedf35c3def",
        "name": "Node-Red receives/replies to messages from  \\n TiddlyWiki clients via these two nodes \\n  \\n 'TW client out' will only work from messages \\n originating from 'TW client in'",
        "style": {
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "add2325b1cc1c629",
            "21d6d79a549684ce"
        ],
        "x": 88,
        "y": 49,
        "w": 444,
        "h": 238
    },
    {
        "id": "78d42539d58ea4f6",
        "type": "group",
        "z": "fc4bfaedf35c3def",
        "name": " \\n TiddlyWiki 'tiddler parser' node \\n \\n Parses tiddlers that are in text format \\n JSON or .TID into",
        "style": {
            "label": true,
            "label-position": "n",
            "stroke": "#3f3f3f"
        },
        "nodes": [
            "122e9298ddc68975"
        ],
        "x": 568,
        "y": 49,
        "w": 281,
        "h": 222
    },
    {
        "id": "c95074a4d7aa6070",
        "type": "group",
        "z": "bf7dcf36ee1b438a",
        "g": "f7464a8f5cc4e442",
        "name": "\\n This 'hello' flow responds to above TiddlyWiki request \\n with tiddlers in the Node-Red standard 'Template' node \\n ",
        "style": {
            "label": true,
            "label-position": "n",
            "stroke": "none",
            "fill": "none"
        },
        "nodes": [
            "80407f300ac7033c",
            "0a11219ac3279f4f",
            "ddd1dfc131b74fd7",
            "c882655e8d51597f",
            "c8562eaca2dbbd8d",
            "7c0c6a890fdeb607",
            "a65ba819d5721d4f"
        ],
        "x": 38,
        "y": 165,
        "w": 1110,
        "h": 276
    },
    {
        "id": "dd522ad1161a9409",
        "type": "group",
        "z": "bebfd65af56181fb",
        "g": "4a7e4defec73ba6f",
        "name": "Input: \\n msg.twFromWiki, msg.twToWiki, msg.twFtlter \\n \\n Output: \\n Copies between the wikis \\n and returns tiddlers copied in msg.payload",
        "style": {
            "label": true,
            "label-position": "s"
        },
        "nodes": [
            "0d759124e9cd878b"
        ],
        "x": 234,
        "y": 719,
        "w": 292,
        "h": 170
    },
    {
        "id": "d528fcb60dc1777c",
        "type": "group",
        "z": "bebfd65af56181fb",
        "g": "71a36a243127bc83",
        "name": "Input: \\n msg.twWiki, msg.twFtlter \\n \\n Output: \\n msg.payload contains tiddlers matching twFilter",
        "style": {
            "label": true,
            "label-position": "s"
        },
        "nodes": [
            "7aa6b82189e6e8ae",
            "ff0849044f57f0b2",
            "07f1b39a9e2b4e0c"
        ],
        "x": 184,
        "y": 379,
        "w": 352,
        "h": 154
    },
    {
        "id": "784f277fe4392287",
        "type": "group",
        "z": "a10937a730662247",
        "g": "7cf576bc81702e1e",
        "name": " \\n TW5-Node-Red Project Management System \\n ",
        "style": {
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "19ad86b066a70edc",
            "6dda66692ff5c3fb",
            "701ef502cfd121a2",
            "676a0785af94780e",
            "7ee4cd62e0d95120",
            "7b854fee13756d08",
            "82d2aec44264c495",
            "ab2baa4b923132cd",
            "9e52e93a1ed17808",
            "c43c8bcd90096b2d"
        ],
        "x": 494,
        "y": 247,
        "w": 352,
        "h": 274
    },
    {
        "id": "7c6203be90f13919",
        "type": "group",
        "z": "a10937a730662247",
        "g": "d2dcbc414bb67695",
        "name": "TiddlyWiki usage example",
        "style": {
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "310c2cb187bdf5a9"
        ],
        "x": 294,
        "y": 39,
        "w": 592,
        "h": 82
    },
    {
        "id": "37dfe29593404c76",
        "type": "group",
        "z": "bf7dcf36ee1b438a",
        "g": "a7c5d113bcde7caa",
        "name": "Switch node \\n msg.topic matches \\n 'show file'",
        "style": {
            "label": true,
            "label-position": "s",
            "stroke": "none",
            "fill": "none"
        },
        "nodes": [
            "dac6f5642101f3b0"
        ],
        "x": 174,
        "y": 659,
        "w": 172,
        "h": 122
    },
    {
        "id": "ddec69f95434e42a",
        "type": "group",
        "z": "bf7dcf36ee1b438a",
        "g": "a7c5d113bcde7caa",
        "name": "Read the filename \\n provided by \\n requesting  (sender) tiddler",
        "style": {
            "stroke": "none",
            "fill": "none",
            "label": true,
            "label-position": "s"
        },
        "nodes": [
            "6ab74c412581482f"
        ],
        "x": 314,
        "y": 659,
        "w": 232,
        "h": 122
    },
    {
        "id": "694cb905ee221edc",
        "type": "group",
        "z": "bf7dcf36ee1b438a",
        "g": "a7c5d113bcde7caa",
        "name": "Move file contents from \\n msg.payload to msg.filetext \\n to free up msg.payload",
        "style": {
            "stroke": "none",
            "fill": "none",
            "label": true,
            "label-position": "s"
        },
        "nodes": [
            "1688a65dacdd55fe"
        ],
        "x": 514,
        "y": 659,
        "w": 292,
        "h": 122
    },
    {
        "id": "9e9d7d5d6677e99e",
        "type": "group",
        "z": "bf7dcf36ee1b438a",
        "g": "a7c5d113bcde7caa",
        "name": "Template to create \\n tiddler of file contents \\n into msg.payload",
        "style": {
            "stroke": "none",
            "fill": "none",
            "label": true,
            "label-position": "s"
        },
        "nodes": [
            "062e70cc3789a1a1"
        ],
        "x": 774,
        "y": 659,
        "w": 212,
        "h": 122
    },
    {
        "id": "dbbdc46edaf683d5",
        "type": "group",
        "z": "bf7dcf36ee1b438a",
        "g": "a7c5d113bcde7caa",
        "name": "This TW GUI template (in 'Home' wiki) asks for the \\n file path and file type \\n which are placed in tiddler fields \\n and sent with the request to Node-Red ",
        "style": {
            "stroke": "none",
            "fill": "none",
            "label": true,
            "label-position": "s"
        },
        "nodes": [
            "9a84940484428484"
        ],
        "x": 394,
        "y": 539,
        "w": 332,
        "h": 138
    },
    {
        "id": "add2325b1cc1c629",
        "type": "group",
        "z": "fc4bfaedf35c3def",
        "g": "13637ad3fcc72fea",
        "name": "'TW client in' has the sender \\n client wiki information in msg.wiki \\n needed to respond",
        "style": {
            "label": true,
            "label-position": "s",
            "stroke": "none",
            "fill": "none"
        },
        "nodes": [
            "b8406370c505620c"
        ],
        "x": 114,
        "y": 139,
        "w": 213,
        "h": 122
    },
    {
        "id": "21d6d79a549684ce",
        "type": "group",
        "z": "fc4bfaedf35c3def",
        "g": "13637ad3fcc72fea",
        "name": "'TW client out' sends tiddlers \\n in msg.payload back to \\n the client",
        "style": {
            "label": true,
            "label-position": "s",
            "stroke": "none",
            "fill": "none"
        },
        "nodes": [
            "2bffb7161587546b"
        ],
        "x": 314,
        "y": 139,
        "w": 192,
        "h": 122
    },
    {
        "id": "122e9298ddc68975",
        "type": "group",
        "z": "fc4bfaedf35c3def",
        "g": "78d42539d58ea4f6",
        "name": "Javascript objects \\n Is done automatically in most cases",
        "style": {
            "label": true,
            "label-position": "s",
            "stroke": "none",
            "fill": "none"
        },
        "nodes": [
            "4f9ce3c271741573"
        ],
        "x": 594,
        "y": 139,
        "w": 229,
        "h": 106
    },
    {
        "id": "0a11219ac3279f4f",
        "type": "group",
        "z": "bf7dcf36ee1b438a",
        "g": "c95074a4d7aa6070",
        "name": "Switch node \\n msg.topic matches \\n 'hello'",
        "style": {
            "label": true,
            "label-position": "s",
            "stroke": "none",
            "fill": "none"
        },
        "nodes": [
            "cdcaa30c8d7b6208"
        ],
        "x": 174,
        "y": 239,
        "w": 152,
        "h": 122
    },
    {
        "id": "ddd1dfc131b74fd7",
        "type": "group",
        "z": "bf7dcf36ee1b438a",
        "g": "c95074a4d7aa6070",
        "name": "'Template' nodes \\n Tiddlers in JSON \\n format above \\n .tid format below",
        "style": {
            "label": true,
            "label-position": "s",
            "stroke": "none",
            "fill": "none"
        },
        "nodes": [
            "5516b95ab068d43b"
        ],
        "x": 314,
        "y": 239,
        "w": 252,
        "h": 138
    },
    {
        "id": "c882655e8d51597f",
        "type": "group",
        "z": "bf7dcf36ee1b438a",
        "g": "c95074a4d7aa6070",
        "name": "Tiddlywiki \\n 'TW  client  in' \\n Node",
        "style": {
            "label": true,
            "label-position": "s",
            "stroke": "#addb7b",
            "fill": "none"
        },
        "nodes": [
            "1673c677b6a5fee7"
        ],
        "x": 64,
        "y": 239,
        "w": 86,
        "h": 122
    },
    {
        "id": "c8562eaca2dbbd8d",
        "type": "group",
        "z": "bf7dcf36ee1b438a",
        "g": "c95074a4d7aa6070",
        "name": "TiddlyWiki \\n 'TW client out' \\n node",
        "style": {
            "label": true,
            "label-position": "s",
            "stroke": "#7fb7df",
            "fill": "none"
        },
        "nodes": [
            "f08843cf09c6a00c"
        ],
        "x": 594,
        "y": 239,
        "w": 95,
        "h": 122
    },
    {
        "id": "7c0c6a890fdeb607",
        "type": "group",
        "z": "bf7dcf36ee1b438a",
        "g": "c95074a4d7aa6070",
        "name": "The flow continues after 'TW client out' \\n as can do more processing \\n and send more tiddlers later in the flow",
        "style": {
            "stroke": "none",
            "fill": "none",
            "label": true,
            "label-position": "s"
        },
        "nodes": [
            "de83c426cb05bd04"
        ],
        "x": 874,
        "y": 239,
        "w": 248,
        "h": 122
    },
    {
        "id": "c43c8bcd90096b2d",
        "type": "junction",
        "z": "a10937a730662247",
        "g": "784f277fe4392287",
        "x": 520,
        "y": 440,
        "wires": [
            [
                "9e52e93a1ed17808"
            ]
        ]
    },
    {
        "id": "b8406370c505620c",
        "type": "twiki-in",
        "z": "fc4bfaedf35c3def",
        "g": "add2325b1cc1c629",
        "name": "",
        "x": 210,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "2bffb7161587546b",
        "type": "twiki-out",
        "z": "fc4bfaedf35c3def",
        "g": "21d6d79a549684ce",
        "name": "",
        "x": 410,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "4f9ce3c271741573",
        "type": "twiki-parser",
        "z": "fc4bfaedf35c3def",
        "g": "122e9298ddc68975",
        "name": "",
        "x": 690,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "f851efef43d004c1",
        "type": "comment",
        "z": "bf7dcf36ee1b438a",
        "g": "f7464a8f5cc4e442",
        "name": "<$button actions=\"<<node-red 'hello'>>\"> Hello Node-Red </$button>",
        "info": "",
        "x": 630,
        "y": 140,
        "wires": [],
        "icon": "pocket-io-icons/tiddlywiki-dark.png"
    },
    {
        "id": "80407f300ac7033c",
        "type": "template",
        "z": "bf7dcf36ee1b438a",
        "g": "c95074a4d7aa6070",
        "name": "and .tid formatted",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\ntitle: I'm a tid formatted tiddler\ntags: node-red1\n\nThis request from wiki '{{wikiname}}'.\n+===+\n\ntags: node-red1\ntitle: another tiddler\n\nThese tiddlers are tagged 'node-red1'.\n+===+\n\n",
        "output": "str",
        "x": 450,
        "y": 400,
        "wires": [
            [
                "f08843cf09c6a00c"
            ]
        ]
    },
    {
        "id": "cdcaa30c8d7b6208",
        "type": "switch",
        "z": "bf7dcf36ee1b438a",
        "g": "0a11219ac3279f4f",
        "name": "hello",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "hello",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 250,
        "y": 280,
        "wires": [
            [
                "80407f300ac7033c",
                "5516b95ab068d43b"
            ]
        ]
    },
    {
        "id": "5516b95ab068d43b",
        "type": "template",
        "z": "bf7dcf36ee1b438a",
        "g": "ddd1dfc131b74fd7",
        "name": "a few JSON tiddlers",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "[\n    {\n        \"title\": \"My first Node-Red tiddler\",\n        \"text\": \"Your socketId is @@color:aqua; {{wiki.req.socketId}} @@\",\n        \"ioToStory\": \"yes\",\n        \"tags\": \"node-red1\"\n    },\n    {\n        \"title\": \"My second Node-Red tiddler\",\n        \"tags\": \"node-red1\",\n        \"text\": \"Your wiki name is @@border:1px solid aqua; &nbsp;{{wiki.req.wikiName}}&nbsp; @@\"\n    }\n]\n",
        "output": "str",
        "x": 440,
        "y": 280,
        "wires": [
            [
                "f08843cf09c6a00c"
            ]
        ]
    },
    {
        "id": "de83c426cb05bd04",
        "type": "debug",
        "z": "bf7dcf36ee1b438a",
        "g": "7c0c6a890fdeb607",
        "name": "debug msg out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 280,
        "wires": []
    },
    {
        "id": "a65ba819d5721d4f",
        "type": "function",
        "z": "bf7dcf36ee1b438a",
        "g": "c95074a4d7aa6070",
        "name": "text to console",
        "func": "const repl = global.get('repl');\nrepl.tog(`'hello' topic from wiki '${msg.wikiname}' processed`, 181);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 280,
        "wires": [
            [
                "de83c426cb05bd04"
            ]
        ]
    },
    {
        "id": "1673c677b6a5fee7",
        "type": "twiki-in",
        "z": "bf7dcf36ee1b438a",
        "g": "c882655e8d51597f",
        "name": "",
        "x": 105,
        "y": 280,
        "wires": [
            [
                "cdcaa30c8d7b6208"
            ]
        ],
        "l": false
    },
    {
        "id": "f08843cf09c6a00c",
        "type": "twiki-out",
        "z": "bf7dcf36ee1b438a",
        "g": "c8562eaca2dbbd8d",
        "name": "",
        "x": 635,
        "y": 280,
        "wires": [
            [
                "a65ba819d5721d4f"
            ]
        ],
        "l": false
    },
    {
        "id": "1873a972a27c2906",
        "type": "function",
        "z": "bf7dcf36ee1b438a",
        "name": "Display REPL prompt after deploy",
        "func": "// See 'On Start' and 'On Stop'\n",
        "outputs": 0,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nconst repl = global.get('repl');\nrepl.tog('Node-Red interface established');\n",
        "finalize": "// Code added here will be run when the\n// node is being stopped or re-deployed.\nconst repl = global.get('repl');\nrepl.tog('Node-Red interface suspended', 128);\n",
        "libs": [],
        "x": 540,
        "y": 860,
        "wires": []
    },
    {
        "id": "43485fe08103531d",
        "type": "debug",
        "z": "bf7dcf36ee1b438a",
        "name": "wiki connected",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 920,
        "wires": []
    },
    {
        "id": "7cbe649ab68de841",
        "type": "switch",
        "z": "bf7dcf36ee1b438a",
        "name": "ackConnect",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ackConnect",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 530,
        "y": 920,
        "wires": [
            [
                "43485fe08103531d"
            ]
        ]
    },
    {
        "id": "cec66b81efd1e258",
        "type": "twiki-in",
        "z": "bf7dcf36ee1b438a",
        "name": "",
        "x": 370,
        "y": 920,
        "wires": [
            [
                "7cbe649ab68de841"
            ]
        ]
    },
    {
        "id": "dac6f5642101f3b0",
        "type": "switch",
        "z": "bf7dcf36ee1b438a",
        "g": "37dfe29593404c76",
        "name": "show file",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "show file",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 260,
        "y": 700,
        "wires": [
            [
                "6ab74c412581482f"
            ]
        ]
    },
    {
        "id": "6ab74c412581482f",
        "type": "file in",
        "z": "bf7dcf36ee1b438a",
        "g": "ddec69f95434e42a",
        "name": "read msg.filename",
        "filename": "wiki.senderTiddler.filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 430,
        "y": 700,
        "wires": [
            [
                "1688a65dacdd55fe"
            ]
        ]
    },
    {
        "id": "1688a65dacdd55fe",
        "type": "change",
        "z": "bf7dcf36ee1b438a",
        "g": "694cb905ee221edc",
        "name": "msg.payload to msg.filetext",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "filetext",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 700,
        "wires": [
            [
                "062e70cc3789a1a1"
            ]
        ]
    },
    {
        "id": "062e70cc3789a1a1",
        "type": "template",
        "z": "bf7dcf36ee1b438a",
        "g": "9e9d7d5d6677e99e",
        "name": "Create tiddler",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "title: {{{filename}}}\ntype: {{{wiki.senderTiddler.filetype}}}\nioToStory: yes\n\n{{{filetext}}}\n",
        "output": "str",
        "x": 880,
        "y": 700,
        "wires": [
            [
                "c52a028d6325044e"
            ]
        ]
    },
    {
        "id": "9a84940484428484",
        "type": "comment",
        "z": "bf7dcf36ee1b438a",
        "g": "dbbdc46edaf683d5",
        "name": "{{||hello-nodered-template-show-file}}",
        "info": "",
        "x": 560,
        "y": 580,
        "wires": [],
        "icon": "pocket-io-icons/tiddlywiki-dark.png"
    },
    {
        "id": "cd36b1e25870ed26",
        "type": "twiki-in",
        "z": "bf7dcf36ee1b438a",
        "g": "a7c5d113bcde7caa",
        "name": "",
        "x": 165,
        "y": 700,
        "wires": [
            [
                "dac6f5642101f3b0"
            ]
        ],
        "l": false
    },
    {
        "id": "c52a028d6325044e",
        "type": "twiki-out",
        "z": "bf7dcf36ee1b438a",
        "g": "a7c5d113bcde7caa",
        "name": "",
        "x": 995,
        "y": 700,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "0d759124e9cd878b",
        "type": "function",
        "z": "bebfd65af56181fb",
        "g": "dd522ad1161a9409",
        "name": "copy tiddlers between wikis",
        "func": "const repl = global.get('repl');\n\nmsg.twResult = '';\n\nvar gotError = false;\nif (!msg.twFromWiki) {\n\tmsg.twResult = `Error: Need the source wiki name (msg.payload.twFromWiki) to copy the tiddlers from.`;\n\tgotError = true;\n}\nelse if (!msg.twToWiki) {\n\tmsg.twResult = `Error: Need the destination wiki name (msg.payload.twToWiki) to copy the tiddlers to`;\n\tgotError = true;\n}\nelse if (!msg.twFilter) {\n\tmsg.twResult = `Error: A filter (msg.payload.twFilter) to select the tiddlers to copy is required`;\n\tgotError = true;\n}\nelse if (msg.twFromWiki === msg.twToWiki) {\n\tmsg.twResult = `Error: Can not copy to the same wiki.`;\n\tgotError = true;\n}\n\nif (gotError) {\n\tnode.error(msg.twResult)\n\tnode.done();\n\treturn;\n}\n\nvar $from = repl.get$tw(msg.twFromWiki);\nvar $to = repl.get$tw(msg.twToWiki);\n\nif (!$from) {\n\tmsg.twResult = `Error: From wiki '${msg.twFromWiki}' not found in network.`;\n\tnode.error(msg.twResult)\n\tnode.done();\n\treturn;\n}\nif (!$to) {\n\tmsg.twResult = `Error: To wiki '${msg.twToWiki}' not found in network.`;\n\tnode.error(msg.twResult)\n\tnode.done();\n\treturn;\n}\n\n// copy tiddlers into msg.payload\nmsg.payload = $from.utils.parseJSONSafe(\n\t$from.wiki.getTiddlersAsJson(msg.twFilter), []);\n\n// Copy tiddlers between wikis\nmsg.payload.forEach(tiddler => {\n//\t\t\t$to.wiki.addTiddler(new $to.Tiddler(tiddler));\n})\n\nmsg.twResult = `${msg.payload.length} tiddlers copied from ${msg.twFromWiki} to ${msg.twToWiki}`;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 760,
        "wires": [
            [
                "6d2d1c8d4392ab63"
            ]
        ]
    },
    {
        "id": "806c3c792358ec5d",
        "type": "change",
        "z": "bebfd65af56181fb",
        "g": "4a7e4defec73ba6f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "twFromWiki",
                "pt": "msg",
                "to": "poc2go",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "twToWiki",
                "pt": "msg",
                "to": "MyWiki",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "twFilter",
                "pt": "msg",
                "to": "[tag[package]]",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 940,
        "wires": [
            [
                "1a263a9f962d3821"
            ]
        ]
    },
    {
        "id": "1f7637546d8123da",
        "type": "inject",
        "z": "bebfd65af56181fb",
        "g": "4a7e4defec73ba6f",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 940,
        "wires": [
            [
                "806c3c792358ec5d"
            ]
        ]
    },
    {
        "id": "fba8dd555091b6c4",
        "type": "debug",
        "z": "bebfd65af56181fb",
        "g": "4a7e4defec73ba6f",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 655,
        "y": 940,
        "wires": [],
        "l": false
    },
    {
        "id": "993d54c6cf885765",
        "type": "link in",
        "z": "bebfd65af56181fb",
        "g": "4a7e4defec73ba6f",
        "name": "copy tiddlers between wikis",
        "links": [],
        "x": 215,
        "y": 760,
        "wires": [
            [
                "0d759124e9cd878b"
            ]
        ]
    },
    {
        "id": "6d2d1c8d4392ab63",
        "type": "link out",
        "z": "bebfd65af56181fb",
        "g": "4a7e4defec73ba6f",
        "name": "return",
        "mode": "return",
        "links": [],
        "x": 545,
        "y": 760,
        "wires": []
    },
    {
        "id": "1a263a9f962d3821",
        "type": "link call",
        "z": "bebfd65af56181fb",
        "g": "4a7e4defec73ba6f",
        "name": "",
        "links": [
            "993d54c6cf885765"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 500,
        "y": 940,
        "wires": [
            [
                "fba8dd555091b6c4"
            ]
        ]
    },
    {
        "id": "07f1b39a9e2b4e0c",
        "type": "link in",
        "z": "bebfd65af56181fb",
        "g": "d528fcb60dc1777c",
        "name": "get tiddlers from wiki",
        "links": [],
        "x": 225,
        "y": 420,
        "wires": [
            [
                "7aa6b82189e6e8ae"
            ]
        ]
    },
    {
        "id": "ff0849044f57f0b2",
        "type": "link out",
        "z": "bebfd65af56181fb",
        "g": "d528fcb60dc1777c",
        "name": "return",
        "mode": "return",
        "links": [],
        "x": 495,
        "y": 420,
        "wires": []
    },
    {
        "id": "7aa6b82189e6e8ae",
        "type": "function",
        "z": "bebfd65af56181fb",
        "g": "d528fcb60dc1777c",
        "name": "get tiddlers from wiki",
        "func": "const repl = global.get('repl');\n\nmsg.twResult = '';\n\nvar gotError = false;\nif (!msg.twWiki) {\n\tmsg.twResult = `Error: Need the source wiki name (msg.payload.twWiki) to copy the tiddlers from.`;\n\tgotError = true;\n}\nelse if (!msg.twFilter) {\n\tmsg.twResult = `Error: A filter (msg.payload.twFilter) to select the tiddlers to copy is required`;\n\tgotError = true;\n}\n\nif (gotError) {\n\tnode.error(msg.twResult)\n\tnode.done();\n\treturn;\n}\n\nvar $tw = repl.get$tw(msg.twWiki);\n\nif (!$tw) {\n\tmsg.twResult = `Error: From wiki '${msg.twWiki}' not found in network.`;\n\tnode.error(msg.twResult)\n\tnode.done();\n\treturn;\n}\n\n// copy tiddlers into msg.payload\nmsg.payload = repl.qry$tw(msg.twWiki, msg.twFilter);\n\nmsg.twResult = `${msg.payload.length} tiddlers from wiki '${msg.twWiki}'`;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 420,
        "wires": [
            [
                "ff0849044f57f0b2"
            ]
        ]
    },
    {
        "id": "666f8d5dc621b69a",
        "type": "change",
        "z": "bebfd65af56181fb",
        "g": "71a36a243127bc83",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "twWiki",
                "pt": "msg",
                "to": "Home",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "twFilter",
                "pt": "msg",
                "to": "[tag[helloworld]]",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 600,
        "wires": [
            [
                "f0e0ccc0654b9fac"
            ]
        ]
    },
    {
        "id": "30c30623bbe8a2a5",
        "type": "inject",
        "z": "bebfd65af56181fb",
        "g": "71a36a243127bc83",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 600,
        "wires": [
            [
                "666f8d5dc621b69a"
            ]
        ]
    },
    {
        "id": "392997baab3d83a3",
        "type": "debug",
        "z": "bebfd65af56181fb",
        "g": "71a36a243127bc83",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 635,
        "y": 600,
        "wires": [],
        "l": false
    },
    {
        "id": "f0e0ccc0654b9fac",
        "type": "link call",
        "z": "bebfd65af56181fb",
        "g": "71a36a243127bc83",
        "name": "",
        "links": [
            "07f1b39a9e2b4e0c"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 500,
        "y": 600,
        "wires": [
            [
                "392997baab3d83a3"
            ]
        ]
    },
    {
        "id": "0efdbd61adad0880",
        "type": "function",
        "z": "bebfd65af56181fb",
        "name": "get wiki names",
        "func": "const repl = global.get('repl');\n\nmsg.payload = repl.$wikiNames;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 160,
        "wires": [
            [
                "7b6eaef255c7a57f"
            ]
        ]
    },
    {
        "id": "4f0fa5648d276358",
        "type": "inject",
        "z": "bebfd65af56181fb",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 230,
        "y": 160,
        "wires": [
            [
                "0efdbd61adad0880"
            ]
        ]
    },
    {
        "id": "7b6eaef255c7a57f",
        "type": "debug",
        "z": "bebfd65af56181fb",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 535,
        "y": 160,
        "wires": [],
        "l": false
    },
    {
        "id": "77cc0f421e9488ce",
        "type": "function",
        "z": "bebfd65af56181fb",
        "name": "get settings for a wiki",
        "func": "const repl = global.get('repl');\n\nmsg.payload = repl.get$settings(msg.twWiki);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 280,
        "wires": [
            [
                "07e3f0313ba15f66"
            ]
        ]
    },
    {
        "id": "5ac46e6b29981fdd",
        "type": "inject",
        "z": "bebfd65af56181fb",
        "name": "msg.twWiki = 'Home'",
        "props": [
            {
                "p": "twWiki",
                "v": "Home",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 280,
        "wires": [
            [
                "77cc0f421e9488ce"
            ]
        ]
    },
    {
        "id": "07e3f0313ba15f66",
        "type": "debug",
        "z": "bebfd65af56181fb",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 555,
        "y": 280,
        "wires": [],
        "l": false
    },
    {
        "id": "8c8f6eb06dd37a59",
        "type": "function",
        "z": "bebfd65af56181fb",
        "name": "get settings for all wikis",
        "func": "const repl = global.get('repl');\n\nmsg.payload = repl.$ss;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 220,
        "wires": [
            [
                "42bae9a00470ae88"
            ]
        ]
    },
    {
        "id": "6c79f6b6bf6cc3d6",
        "type": "inject",
        "z": "bebfd65af56181fb",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 230,
        "y": 220,
        "wires": [
            [
                "8c8f6eb06dd37a59"
            ]
        ]
    },
    {
        "id": "42bae9a00470ae88",
        "type": "debug",
        "z": "bebfd65af56181fb",
        "name": "debug 9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 555,
        "y": 220,
        "wires": [],
        "l": false
    },
    {
        "id": "3768983fc11770dd",
        "type": "inject",
        "z": "bebfd65af56181fb",
        "name": "",
        "props": [
            {
                "p": "ff",
                "v": "fff",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 230,
        "y": 80,
        "wires": [
            [
                "7f1d3d545c0ad13a"
            ]
        ]
    },
    {
        "id": "7f1d3d545c0ad13a",
        "type": "function",
        "z": "bebfd65af56181fb",
        "name": "log to console",
        "func": "const repl = global.get('repl');\nrepl.tog('Hello console', 228);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "73cc510bee68600f",
        "type": "inject",
        "z": "bebfd65af56181fb",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 20,
        "wires": [
            [
                "7f83bf24bdf7bc68"
            ]
        ]
    },
    {
        "id": "7f83bf24bdf7bc68",
        "type": "debug",
        "z": "bebfd65af56181fb",
        "name": "Output once",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 20,
        "wires": []
    },
    {
        "id": "f7f87f739520cf6c",
        "type": "switch",
        "z": "a10937a730662247",
        "g": "7cf576bc81702e1e",
        "name": "^project.*$",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "^project.*$",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 190,
        "y": 380,
        "wires": [
            [
                "612dd97f9803d988"
            ]
        ]
    },
    {
        "id": "612dd97f9803d988",
        "type": "switch",
        "z": "a10937a730662247",
        "g": "7cf576bc81702e1e",
        "name": " create \\n add tab \\n add category \\n display network",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "project create",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "project add tab",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "project add category",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "project display network",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 360,
        "y": 380,
        "wires": [
            [
                "676a0785af94780e"
            ],
            [
                "7ee4cd62e0d95120"
            ],
            [
                "ab2baa4b923132cd"
            ],
            [
                "c43c8bcd90096b2d"
            ]
        ]
    },
    {
        "id": "19ad86b066a70edc",
        "type": "function",
        "z": "a10937a730662247",
        "g": "784f277fe4392287",
        "name": "create",
        "func": "// Create a project\n// Verify input and build project from $$$project$$$ template\nconst repl = global.get('repl');\n\nvar sender = Object.assign({}, msg.wiki.senderTiddler);\nsender.ioResult = '';\n\nvar dstWikiName = sender.ioPrjWiki;\nvar project = sender.ioPrjProject;\nvar $tw = repl.get$tw(dstWikiName); // destination wiki\n\n// Get the project template and replace occurances of $$$project$$\n//  with the project name\nvar json = repl.$twCodebase.wiki.getTiddlersAsJson('[[$$$project$$$]]');\nvar text = json.replace(/\\$\\$\\$project\\$\\$\\$/g, project);\nvar tiddlers = $tw.wiki.deserializeTiddlers(null,text,\n\t{title: 'unused'}, {deserializer: 'application/json'});\n\n// Add the project tiddler to the destination wiki\nvar tiddler = tiddlers[0];\n$tw.wiki.addTiddler(new $tw.Tiddler(\n\ttiddler,\n\t$tw.wiki.getCreationFields(),\n\t$tw.wiki.getModificationFields()\n))\n\n// Return successful\nvar link = repl.get$proxy(dstWikiName).link;\nsender.ioResult = `Project created - ${link}/#${project}`;\nmsg.payload = sender;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 320,
        "wires": [
            [
                "6dbe0d95eac94002"
            ]
        ]
    },
    {
        "id": "d7e3072a8dfa19ac",
        "type": "debug",
        "z": "a10937a730662247",
        "g": "7cf576bc81702e1e",
        "name": "debug project",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 975,
        "y": 400,
        "wires": [],
        "l": false
    },
    {
        "id": "6dda66692ff5c3fb",
        "type": "catch",
        "z": "a10937a730662247",
        "g": "784f277fe4392287",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 580,
        "y": 480,
        "wires": [
            [
                "701ef502cfd121a2"
            ]
        ]
    },
    {
        "id": "701ef502cfd121a2",
        "type": "function",
        "z": "a10937a730662247",
        "g": "784f277fe4392287",
        "name": "error to ioResult",
        "func": "var sender = Object.assign({}, msg.wiki.senderTiddler);\n\nsender.ioResult = msg.error.message;\nmsg.payload = sender;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 480,
        "wires": [
            [
                "6dbe0d95eac94002"
            ]
        ]
    },
    {
        "id": "676a0785af94780e",
        "type": "function",
        "z": "a10937a730662247",
        "g": "784f277fe4392287",
        "name": "check fields",
        "func": "const repl = global.get('repl');\n\nvar sender = Object.assign({}, msg.wiki.senderTiddler);\nvar errorMsg = '';\nsender.ioResult = '';\n\nvar dstWikiName = sender.ioPrjWiki;\nvar project = sender.ioPrjProject;\nvar $tw = repl.get$tw(dstWikiName); // destination wiki\n\nif (!dstWikiName) {\n\terrorMsg = `Error: Wiki name is required`;\n}\nelse if (!project) {\n\terrorMsg = `Error: Project name is required`;\n}\nelse if (!$tw) {\n\terrorMsg = `Error: Wiki '${dstWikiName}' is not in the Pocket-io network.`;\n}\nelse if (!/^[$A-Z_][0-9A-Z_$-]*$/i.test(project)) {\n\terrorMsg = `Error: Project name may only contain letters, numbers, dollar-sign, underbars, and dashes\\n\\n` +\n\t\t`Notably spaces and special characters are not allowed.\\n\\n` +\n\t\t`Once created can change the 'caption' field to display as desired.`;\n}\nelse if ($tw.wiki.tiddlerExists(project)) {\n\terrorMsg = `Error: Project '${project}' already exists in wiki '${dstWikiName}'!`;\n}\n\n// Return error\nif (errorMsg) {\n    node.error(errorMsg, msg);\n\treturn;\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 320,
        "wires": [
            [
                "19ad86b066a70edc"
            ]
        ],
        "icon": "font-awesome/fa-check-square-o"
    },
    {
        "id": "7ee4cd62e0d95120",
        "type": "function",
        "z": "a10937a730662247",
        "g": "784f277fe4392287",
        "name": "check fields",
        "func": "// Create a new tab for an existing project\n//  If the tab already exists - exits with no action\n//  If project already exists will create a new tab\nconst repl = global.get('repl');\n\nvar sender = Object.assign({}, msg.wiki.senderTiddler);\nvar errorMsg = '';\nsender.ioResult = '';\n\nvar dstWikiName = sender.ioPrjWiki ?? msg.wiki.req.wikiName;\nvar project = sender.ioPrjProject;\nvar tabName = sender.ioPrjTabName;\nvar tabType = sender.ioPrjTabType;\n\nvar $tw = repl.get$tw(dstWikiName);\n\nif (!$tw) {\n\terrorMsg = `Error: Wiki '${dstWikiName}' is not in the Pocket-io network.`;\n}\nelse if (!tabName) {\n\terrorMsg = 'Error: A tab name is required.';\n}\nelse if (!tabType) {\n\terrorMsg = 'Error: A tab type is required.';\n}\nelse if (!project) {\n\terrorMsg = 'Error: A project name is required.';\n}\nelse if (!/^[$A-Z_][0-9A-Z_$-]*$/i.test(tabName)) {\n\terrorMsg = `Error: Tab name may only contain letters, numbers, dollar-sign, underbars, and dashes\\n\\n` +\n\t\t`Notably spaces and special characters are not allowed.\\n\\n` +\n\t\t`Once created can change the 'caption' field to display as desired.`;\n}\nelse if ($tw.wiki.tiddlerExists(`${project}-${tabType}-${tabName}`)) {\n\terrorMsg = `Error: Tab '[[${project}-${tabType}-${tabName}]]' already exists!`;\n}\n\n// Return if error\nif (errorMsg) {\n\tnode.error(errorMsg, msg);\n\treturn;\n\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 360,
        "wires": [
            [
                "7b854fee13756d08"
            ]
        ],
        "icon": "font-awesome/fa-check-square-o"
    },
    {
        "id": "7b854fee13756d08",
        "type": "function",
        "z": "a10937a730662247",
        "g": "784f277fe4392287",
        "name": "add tab",
        "func": "// Create a new tab for an existing project\n//  If the tab already exists - exits with no action\n//  If project already exists will create a new tab\nconst repl = global.get('repl');\n\nvar sender = Object.assign({}, msg.wiki.senderTiddler);\nsender.ioResult = '';\n\nvar dstWikiName = sender.ioPrjWiki ?? msg.wiki.req.wikiName;\nvar project = sender.ioPrjProject;\nvar tabName = sender.ioPrjTabName;\nvar tabType = sender.ioPrjTabType;\n\nvar $tw = repl.get$tw(dstWikiName);\n\nvar newTab = {\n\ttitle: `${project}-${tabType}-${tabName}`,\n\ttags: $tw.utils.stringifyList([tabType, project, `$:/pocket-io/${project}/${tabType}`]),\n\tcaption: tabName,\n\ttext: tabType === 'code' ? '// code goes here' : `${tabType} goes here`,\n\ttype: tabType === 'code' ? 'application/javascript' : 'text/vnd.tiddlywiki'\n}\n// Return the new tab\nmsg.payload = [newTab];\n\nsender.ioPrjTabName = '';\nmsg.payload.push(sender);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 360,
        "wires": [
            [
                "6dbe0d95eac94002"
            ]
        ]
    },
    {
        "id": "82d2aec44264c495",
        "type": "function",
        "z": "a10937a730662247",
        "g": "784f277fe4392287",
        "name": "add category",
        "func": "const repl = global.get('repl');\n\nvar sender = Object.assign({}, msg.wiki.senderTiddler);\nvar errorMsg = '';\nsender.ioResult = '';\n\nvar catListTiddler = '$:/poc2go/pocket-io/project/projects';\nvar dstWikiName = msg.wiki.req.wikiName;\nvar project = sender.ioPrjProject;\nvar pillTitle = sender.ioPrjCategoryPillTitle;\nvar categoryType = sender.ioPrjCategoryType;\nvar categoryTitle = `$:/pocket-io/project/ui/Tab${categoryType}`;\nvar categoryText = `<<categoryPill '${pillTitle}'>>`;\n\nvar $tw = repl.get$tw(dstWikiName);\n\nvar broadcast = dstWikiName === 'codebase' ? ' $:/tags/pocket-io/broadcast' : '';\n\nvar  newCategory = {\n    title: categoryTitle,\n    tags: '$:/tags/pocket-io/tabtype' + broadcast,\n    caption: pillTitle,\n    text: categoryText,\n    type: 'text/vnd.tiddlywiki',\n    tabtype: categoryType\n};\n\nmsg.payload = [ newCategory ];\n\nvar catList = $tw.wiki.getTiddlerList(catListTiddler, 'categories');\ncatList.push(categoryType);\n$tw.wiki.setText(catListTiddler,'categories', null, $tw.utils.stringifyList(catList));\nmsg.payload.push($tw.wiki.getTiddler(catListTiddler).fields);\n\nsender.ioPrjCategoryType = '';\nsender.ioPrjCategoryPillTitle = '';\nsender.ioResult = `Created category '${pillTitle}' of type '${categoryType}'`;\n\nmsg.payload.push(sender);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 400,
        "wires": [
            [
                "6dbe0d95eac94002"
            ]
        ]
    },
    {
        "id": "ab2baa4b923132cd",
        "type": "function",
        "z": "a10937a730662247",
        "g": "784f277fe4392287",
        "name": "check fields",
        "func": "const repl = global.get('repl');\n\nvar sender = Object.assign({}, msg.wiki.senderTiddler);\nvar errorMsg = '';\nsender.ioResult = '';\n\nvar catListTiddler = '$:/poc2go/pocket-io/project/projects';\nvar dstWikiName = msg.wiki.req.wikiName;\nvar project = sender.ioPrjProject;\nvar pillTitle = sender.ioPrjCategoryPillTitle;\nvar categoryType = sender.ioPrjCategoryType;\nvar categoryTitle = `$:/pocket-io/project/ui/Tab${categoryType}`;\nvar categoryText = `<<categoryPill '${pillTitle}'>>`;\n\nvar $tw = repl.get$tw(dstWikiName);\n\nif (!$tw) {\n\terrorMsg = `Error: Wiki '${dstWikiName}' is not in the Pocket-io network.`;\n}\nelse if (!categoryType) {\n\terrorMsg = 'Error: A category type is required.';\n}\nelse if (!project) {\n\terrorMsg = 'Error: A project name is required.';\n}\nelse if (!/^[$A-Z_][0-9A-Z_$-]*$/i.test(categoryType)) {\n\terrorMsg = `Error: Tab type may only contain letters, numbers, dollar-sign, underbars, and dashes\\n\\n` +\n\t\t`Notably spaces and special characters are not allowed.\\n`;\n}\nelse if ($tw.wiki.tiddlerExists(categoryTitle)) {\n\terrorMsg = `Error: Category ${categoryTitle} already exists!`;\n}\n\n// Return if error\nif (errorMsg) {\n    node.error(errorMsg, msg);\n\treturn;\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 400,
        "wires": [
            [
                "82d2aec44264c495"
            ]
        ],
        "icon": "font-awesome/fa-check-square-o"
    },
    {
        "id": "9e52e93a1ed17808",
        "type": "function",
        "z": "a10937a730662247",
        "g": "784f277fe4392287",
        "name": "display network",
        "func": "const repl = global.get('repl');\n\nvar sender = Object.assign({}, msg.wiki.senderTiddler);\nsender.ioResult = '';\n\nvar tableTemplate = '|tc-center|k\\n| Domain | Wiki | Project | AutoLoad <br> Code |h\\n';\nvar origin = msg.wiki.req.info['$:/info/url/origin'];\nvar sameProxy = repl.get$server(msg.wikiname).isPublic;\nrepl.$ss.forEach(settings => {\n    var wikiName = settings.name;\n    if (repl.get$server(wikiName).isPublic !== sameProxy) { return; }\n    var originName = origin === repl.get$server(wikiName).localName\n        ? repl.get$server(wikiName).localName\n        : 'Internet';\n    var wikiLink = `${origin}/${wikiName}`;\n    var $tw = repl.get$tw(wikiName);\n\n    tableTemplate += `|[[${originName}|${origin}/${wikiName}]]|[[${wikiName}|${wikiLink}]] |<|<|\\n`;\n    $tw.wiki.filterTiddlers('[tag[Projects]]').forEach(project => {\n        if (/^\\$\\$\\$/.test(project)) { return; } // continue next forEach\n        var tiddler = JSON.parse($tw.wiki.getTiddlerAsJson(project));\n        tableTemplate += `| |<|[[${project}|${wikiLink}/#${project}]] ` +\n            `| ${tiddler.autoLoad === 'yes' ? 'yes' : 'no'} |\\n`;\n    })\n})\n\nmsg.payload = {\n    title: '$:/temp/pocket-io/system/projects',\n    text: tableTemplate,\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 440,
        "wires": [
            [
                "6dbe0d95eac94002"
            ]
        ]
    },
    {
        "id": "310c2cb187bdf5a9",
        "type": "comment",
        "z": "a10937a730662247",
        "g": "7c6203be90f13919",
        "name": "<$button actions=\"<<node-red 'project create'>>\"> Create Project </$button>",
        "info": "",
        "x": 590,
        "y": 80,
        "wires": [],
        "icon": "pocket-io-icons/tiddlywiki-dark.png"
    },
    {
        "id": "5c9d161d5c1e5c04",
        "type": "twiki-in",
        "z": "a10937a730662247",
        "g": "7cf576bc81702e1e",
        "name": "",
        "x": 65,
        "y": 380,
        "wires": [
            [
                "f7f87f739520cf6c"
            ]
        ],
        "l": false
    },
    {
        "id": "6dbe0d95eac94002",
        "type": "twiki-out",
        "z": "a10937a730662247",
        "g": "7cf576bc81702e1e",
        "name": "",
        "x": 915,
        "y": 400,
        "wires": [
            [
                "d7e3072a8dfa19ac"
            ]
        ],
        "l": false
    },
    {
        "id": "499eef7df40ed31b",
        "type": "function",
        "z": "faf664cead0da5c0",
        "name": "copy tiddlers",
        "func": "const repl = global.get('repl');\n\n// Copy tiddlers from wiki to web client\nfunction copyTiddlers(msg) {\n\tvar sender = Object.assign({}, msg.wiki.senderTiddler);\n\tsender.ioResult = '';\n\n\tvar gotError = false;\n\tif (!sender.ioFromWiki) {\n\t\tsender.ioResult = `Error: Need the source wiki name to copy the tiddlers from.`;\n\t\tgotError = true;\n\t}\n\telse if (!sender.ioToWiki) {\n\t\tsender.ioResult = `Error: Need the destination wiki name to copy the tiddlers to`;\n\t\tgotError = true;\n\t}\n\telse if (!sender.ioFilter) {\n\t\tsender.ioResult = `Error: A filter to select the tiddlers to copy is required`;\n\t\tgotError = true;\n\t}\n\telse if (sender.ioFromWiki === sender.ioToWiki) {\n\t\tsender.ioResult = `Error: Can not copy to the same wiki.`;\n\t\tgotError = true;\n\t}\n\n\t// copy tiddlers\n\tif (!gotError) {\n\t\tvar $from = repl.get$tw(sender.ioFromWiki);\n\t\tvar $to = repl.get$tw(sender.ioToWiki);\n\t\tvar tiddlers = $from.utils.parseJSONSafe(\n\t\t\t$from.wiki.getTiddlersAsJson(sender.ioFilter), []);\n\t\ttiddlers.forEach(tiddler => {\n\t\t\t$to.wiki.addTiddler(new $to.Tiddler(tiddler));\n\t\t\t// send system tiddlers to client via sockets\n\t\t\tif (/^\\$:\\//.test(tiddler.title)) {\n\t\t\t\tmsg.wiki.resultTiddlers.push(tiddler);\n\t\t\t}\n\t\t})\n\t\tsender.ioResult = `${tiddlers.length} tiddlers copied from ${sender.ioFromWiki} to ${sender.ioToWiki}`;\n\t}\t\n\n\tmsg.wiki.resultTiddlers.push(sender);\n\trepl.$refreshClients(sender.ioToWiki);\n\treturn msg;\n}\n\nreturn copyTiddlers(msg);\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 80,
        "wires": [
            [
                "1a983ef48a875911"
            ]
        ]
    },
    {
        "id": "7a8291e0077e9494",
        "type": "switch",
        "z": "faf664cead0da5c0",
        "name": "topics: \\n copytiddlers \\n resetIoFields \\n pulltiddlers \\n deleteTiddlers",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "copytiddlers",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "resetIoFields",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pulltiddlers",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "deleteTiddlers",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 220,
        "y": 140,
        "wires": [
            [
                "499eef7df40ed31b"
            ],
            [
                "8dc6f72eaf1b6ec6"
            ],
            [
                "6c921185b453c727"
            ],
            [
                "742ec21f03e45d5c"
            ]
        ]
    },
    {
        "id": "6c921185b453c727",
        "type": "function",
        "z": "faf664cead0da5c0",
        "name": "pull tiddlers",
        "func": "const repl = global.get('repl');\n\nfunction resetIoFields(msg) {\n    var clean = {};\n    var sender = Object.assign({}, msg.wiki.senderTiddler);\n\n    if (sender.title === 'project') {\n        sender.ioResult = `Reset of pocket-io fields is not allowed on the 'Project Managment' tiddler. They are required for it to work.`\n        msg.wiki.resultTiddlers.push(sender);\n        return msg;\n    }\n\n    for (const key in sender) {\n        if (/^io/.test(key)) {\n            continue;\n        }\n        clean[key] = sender[key];\n    }\n\n    msg.wiki.resultTiddlers.push(clean);\n    return msg;\n}\n\nreturn resetIoFields(msg);\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 160,
        "wires": [
            [
                "1a983ef48a875911"
            ]
        ]
    },
    {
        "id": "8dc6f72eaf1b6ec6",
        "type": "function",
        "z": "faf664cead0da5c0",
        "name": "reset io fields",
        "func": "const repl = global.get('repl');\n\nfunction resetIoFields(msg) {\n    var clean = {};\n    var sender = Object.assign({}, msg.wiki.senderTiddler);\n\n    if (sender.title === 'project') {\n        sender.ioResult = `Reset of pocket-io fields is not allowed on the 'Project Managment' tiddler. They are required for it to work.`\n        msg.wiki.resultTiddlers.push(sender);\n        return msg;\n    }\n\n    for (const key in sender) {\n        if (/^io/.test(key)) {\n            continue;\n        }\n        clean[key] = sender[key];\n    }\n\n    msg.wiki.resultTiddlers.push(clean);\n    return msg;\n}\n\nreturn resetIoFields(msg);\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 120,
        "wires": [
            [
                "1a983ef48a875911"
            ]
        ]
    },
    {
        "id": "742ec21f03e45d5c",
        "type": "function",
        "z": "faf664cead0da5c0",
        "name": "delete tiddlers",
        "func": "const repl = global.get('repl');\nvar sender = msg.wiki.senderTiddler;\nvar $tw = repl.get$tw(msg.wikiname);\nvar titles = $tw.wiki.filterTiddlers(msg.wiki.req.filter);\n$tw.utils.each(titles, (title) => {\n\t$tw.wiki.deleteTiddler(title);\n});\n\nrepl.$refreshClients(msg.wikiname)\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 200,
        "wires": [
            [
                "6fb01185c724e4ac"
            ]
        ]
    },
    {
        "id": "6fb01185c724e4ac",
        "type": "debug",
        "z": "faf664cead0da5c0",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 200,
        "wires": []
    },
    {
        "id": "e5c7acf7a45dc1be",
        "type": "twiki-in",
        "z": "faf664cead0da5c0",
        "name": "",
        "x": 75,
        "y": 140,
        "wires": [
            [
                "7a8291e0077e9494"
            ]
        ],
        "l": false
    },
    {
        "id": "1a983ef48a875911",
        "type": "twiki-out",
        "z": "faf664cead0da5c0",
        "name": "",
        "x": 575,
        "y": 120,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "014708f6c0e76350",
        "type": "debug",
        "z": "8a1cb15d54e1d437",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 260,
        "wires": []
    },
    {
        "id": "e59a16e005eba7dd",
        "type": "http request",
        "z": "8a1cb15d54e1d437",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://rpi5:3000/Home/tiddlers/[[Pocket-io System]]",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 330,
        "y": 260,
        "wires": [
            [
                "ac6671cce8cf55d5"
            ]
        ]
    },
    {
        "id": "ffcc7fe816cc5596",
        "type": "inject",
        "z": "8a1cb15d54e1d437",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 260,
        "wires": [
            [
                "e59a16e005eba7dd"
            ]
        ]
    },
    {
        "id": "8c75cd6c898531c4",
        "type": "inject",
        "z": "8a1cb15d54e1d437",
        "name": "msg.wikiname: Home",
        "props": [
            {
                "p": "wikiname",
                "v": "Home",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 220,
        "y": 200,
        "wires": [
            [
                "900a8c6c9eec40f3"
            ]
        ]
    },
    {
        "id": "900a8c6c9eec40f3",
        "type": "function",
        "z": "8a1cb15d54e1d437",
        "name": "Display given wiki URL in debug panel",
        "func": "const repl = global.get('repl');\n\nmsg.payload = `Wiki ${msg.wikiname} is ${repl.get$proxy(msg.wikiname).link}`\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 200,
        "wires": [
            [
                "374eafaeec7f78ad"
            ]
        ]
    },
    {
        "id": "374eafaeec7f78ad",
        "type": "debug",
        "z": "8a1cb15d54e1d437",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 705,
        "y": 200,
        "wires": [],
        "l": false
    },
    {
        "id": "ac6671cce8cf55d5",
        "type": "twiki-parser",
        "z": "8a1cb15d54e1d437",
        "name": "",
        "x": 490,
        "y": 260,
        "wires": [
            [
                "014708f6c0e76350"
            ]
        ]
    },
    {
        "id": "1732ef7f92556ce7",
        "type": "template",
        "z": "8a1cb15d54e1d437",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"title\": \"test it 2\",\n    \"text\": \"some test!!!\",\n    \"ioToStory\": \"yes\"\n}",
        "output": "str",
        "x": 400,
        "y": 340,
        "wires": [
            [
                "ca4f46301f55353d"
            ]
        ]
    },
    {
        "id": "8b17abc06620f4dd",
        "type": "switch",
        "z": "8a1cb15d54e1d437",
        "name": "Topic 'test'",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "test",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 250,
        "y": 340,
        "wires": [
            [
                "1732ef7f92556ce7"
            ]
        ]
    },
    {
        "id": "a993d29142a7f5c7",
        "type": "template",
        "z": "8a1cb15d54e1d437",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "title: Hi demo 2.2\nioToStory: yes\n\nthis is some test tooooo!!!",
        "output": "str",
        "x": 400,
        "y": 380,
        "wires": [
            [
                "ca4f46301f55353d"
            ]
        ]
    },
    {
        "id": "76b07d638e1110c9",
        "type": "switch",
        "z": "8a1cb15d54e1d437",
        "name": "'demo 2'",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "demo 2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 241,
        "y": 380,
        "wires": [
            [
                "a993d29142a7f5c7"
            ]
        ]
    },
    {
        "id": "e3b1b81cb123aba0",
        "type": "twiki-in",
        "z": "8a1cb15d54e1d437",
        "name": "",
        "x": 135,
        "y": 360,
        "wires": [
            [
                "8b17abc06620f4dd",
                "76b07d638e1110c9"
            ]
        ],
        "l": false
    },
    {
        "id": "ca4f46301f55353d",
        "type": "twiki-out",
        "z": "8a1cb15d54e1d437",
        "name": "",
        "x": 505,
        "y": 360,
        "wires": [
            [
                "014708f6c0e76350"
            ]
        ],
        "l": false
    },
    {
        "id": "d2a0bb33e100a072",
        "type": "template",
        "z": "8a1cb15d54e1d437",
        "name": "Tiddler to broadcast",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "title: I'm getting around\nioToStory: yes\n\nSome tiddlers end up everywhere!\n",
        "output": "str",
        "x": 450,
        "y": 60,
        "wires": [
            [
                "b4d3d3a126e331a3"
            ]
        ]
    },
    {
        "id": "f41d2f96fc126522",
        "type": "inject",
        "z": "8a1cb15d54e1d437",
        "name": "msg.wikiname: Home",
        "props": [
            {
                "p": "wikiname",
                "v": "Home",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 220,
        "y": 60,
        "wires": [
            [
                "d2a0bb33e100a072"
            ]
        ]
    },
    {
        "id": "b4d3d3a126e331a3",
        "type": "twiki-broadcast",
        "z": "8a1cb15d54e1d437",
        "name": "",
        "x": 660,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "8c9d51784b1c38b2",
        "type": "inject",
        "z": "8a1cb15d54e1d437",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 140,
        "wires": [
            [
                "073014720e48c887"
            ]
        ]
    },
    {
        "id": "3fc7ab2cd8ff956b",
        "type": "twiki-write",
        "z": "8a1cb15d54e1d437",
        "name": "",
        "tw_msg_overrides": false,
        "tw_wikiname": "tester",
        "x": 500,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "073014720e48c887",
        "type": "twiki-read",
        "z": "8a1cb15d54e1d437",
        "name": "",
        "tw_msg_overrides": false,
        "tw_wikiname": "Home",
        "tw_filter": "[[gettingstarted]]",
        "x": 320,
        "y": 140,
        "wires": [
            [
                "3fc7ab2cd8ff956b"
            ]
        ]
    }
]