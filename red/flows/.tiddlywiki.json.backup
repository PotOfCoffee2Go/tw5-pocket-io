[
    {
        "id": "62c6b96ab760ca78",
        "type": "tab",
        "label": "TiddlyWiki",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5b24d6e63acf9047",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "966a05f4e1b8dcf0",
        "type": "tab",
        "label": "TPI Projects",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8adf8de645b60e16",
        "type": "subflow",
        "name": "TW client in",
        "info": "",
        "category": "tiddlywiki",
        "in": [],
        "out": [
            {
                "x": 320,
                "y": 80,
                "wires": [
                    {
                        "id": "c423533ded980b73",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#C0DEED",
        "icon": "tw5-node-red/networkdown.svg",
        "status": {
            "x": 320,
            "y": 140,
            "wires": [
                {
                    "id": "cadd7bb71eeb7243",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "83b81066588d5f7b",
        "type": "subflow",
        "name": "TW client out",
        "info": "",
        "category": "tiddlywiki",
        "in": [
            {
                "x": 80,
                "y": 80,
                "wires": [
                    {
                        "id": "4876804024f936fa"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 400,
                "y": 80,
                "wires": [
                    {
                        "id": "4876804024f936fa",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#C0DEED",
        "icon": "tw5-node-red/networkup.svg"
    },
    {
        "id": "1d5b93e906f67840",
        "type": "subflow",
        "name": "TW broadcast",
        "info": "",
        "category": "tiddlywiki",
        "in": [
            {
                "x": 80,
                "y": 80,
                "wires": [
                    {
                        "id": "5a302b26a3767cb1"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 420,
                "y": 80,
                "wires": [
                    {
                        "id": "5a302b26a3767cb1",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#C0DEED",
        "icon": "tw5-node-red/broadcast.png",
        "status": {
            "x": 420,
            "y": 140,
            "wires": [
                {
                    "id": "edb1d8695ef972b8",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "0d3535cb27027846",
        "type": "subflow",
        "name": "tiddler parser",
        "info": "\r\nAppend tiddler or array of tiddlers in `msg.payload`\r\nto the msg being returned to the requesting wiki.\r\nThe node can be used multiple times in a single flow.\r\n\r\n## msg.payload\r\nContains JavaScript object or array of objects containing the fields of the tiddler.\r\n - **title** field is required \r\n - **text** is not required - but is very common\r\n \r\n",
        "category": "tiddlywiki",
        "in": [
            {
                "x": 100,
                "y": 80,
                "wires": [
                    {
                        "id": "1b089e0ef2eb4a3e"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 520,
                "y": 80,
                "wires": [
                    {
                        "id": "1b089e0ef2eb4a3e",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {
            "license": "MIT"
        },
        "color": "#A6BBCF",
        "icon": "tw5-node-red/tiddlywiki.png",
        "status": {
            "x": 520,
            "y": 140,
            "wires": [
                {
                    "id": "739878cd3a06c69a",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "295b59907f0d97d2",
        "type": "subflow",
        "name": "read wiki",
        "info": "Read tiddlers from a wiki. Normally uses the `msg.wikiname` and `msg.twfilter` fields.\r\n\r\n",
        "category": "tiddlywiki",
        "in": [
            {
                "x": 80,
                "y": 80,
                "wires": [
                    {
                        "id": "b7e1909b4d67f4cf"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 400,
                "y": 80,
                "wires": [
                    {
                        "id": "b7e1909b4d67f4cf",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "tw_msg_overrides",
                "type": "bool",
                "value": "true",
                "ui": {
                    "label": {
                        "en-US": "Use msg.wikiname / msg.twfilter"
                    },
                    "type": "checkbox"
                }
            },
            {
                "name": "tw_wikiname",
                "type": "str",
                "value": "",
                "ui": {
                    "icon": "font-awesome/fa-bookmark-o",
                    "label": {
                        "en-US": "Default wiki"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "num",
                            "bool",
                            "json",
                            "bin",
                            "env",
                            "conf-types"
                        ]
                    }
                }
            },
            {
                "name": "tw_filter",
                "type": "str",
                "value": "",
                "ui": {
                    "icon": "font-awesome/fa-filter",
                    "label": {
                        "en-US": "Default filter"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "num",
                            "bool",
                            "json",
                            "bin",
                            "env",
                            "conf-types"
                        ]
                    }
                }
            }
        ],
        "meta": {
            "license": "MIT"
        },
        "color": "#A6BBCF",
        "icon": "tw5-node-red/read-wiki.png",
        "status": {
            "x": 400,
            "y": 140,
            "wires": [
                {
                    "id": "e81be91656e745fa",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "489223c003015b3f",
        "type": "subflow",
        "name": "write wiki",
        "info": "",
        "category": "tiddlywiki",
        "in": [
            {
                "x": 80,
                "y": 80,
                "wires": [
                    {
                        "id": "6801d4530f3d9135"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 380,
                "y": 80,
                "wires": [
                    {
                        "id": "6801d4530f3d9135",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "tw_msg_overrides",
                "type": "bool",
                "value": "true",
                "ui": {
                    "label": {
                        "en-US": "Use msg.wikiname"
                    },
                    "type": "checkbox"
                }
            },
            {
                "name": "tw_wikiname",
                "type": "str",
                "value": "",
                "ui": {
                    "label": {
                        "en-US": "Default wikiname"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "num",
                            "bool",
                            "json",
                            "bin",
                            "env",
                            "conf-types"
                        ]
                    }
                }
            }
        ],
        "meta": {},
        "color": "#A6BBCF",
        "icon": "tw5-node-red/write-wiki.png",
        "status": {
            "x": 380,
            "y": 140,
            "wires": [
                {
                    "id": "24783140a82cde75",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "392b55f1513f4105",
        "type": "group",
        "z": "83b81066588d5f7b",
        "name": "\\n Sends message response back to TiddlyWiki \\n   ",
        "style": {
            "label": true,
            "label-position": "s",
            "stroke": "none"
        },
        "nodes": [
            "4876804024f936fa"
        ],
        "x": 114,
        "y": 39,
        "w": 286,
        "h": 122
    },
    {
        "id": "14d2f76b188465c8",
        "type": "group",
        "z": "62c6b96ab760ca78",
        "name": "\\n This flow has a GUI Template in the 'Home' wiki  'Hello Node-Red' project",
        "style": {
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "387aee9414b96304",
            "38f58f1538e9684a",
            "37dfe29593404c76",
            "ddec69f95434e42a",
            "694cb905ee221edc",
            "9e9d7d5d6677e99e",
            "dbbdc46edaf683d5",
            "f7464a8f5cc4e442"
        ],
        "x": -12,
        "y": 285,
        "w": 958,
        "h": 702
    },
    {
        "id": "f7464a8f5cc4e442",
        "type": "group",
        "z": "62c6b96ab760ca78",
        "g": "14d2f76b188465c8",
        "name": "\\n This flow returns a few tiddlers in response to the topic 'hello' request \\n  ",
        "style": {
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "4df2c978a7ce6665",
            "de83c426cb05bd04",
            "f851efef43d004c1",
            "0a11219ac3279f4f",
            "ddd1dfc131b74fd7",
            "122e9298ddc68975",
            "c882655e8d51597f",
            "c8562eaca2dbbd8d",
            "80407f300ac7033c"
        ],
        "x": 14,
        "y": 327,
        "w": 852,
        "h": 340,
        "info": "# Example of Tiddlywiki Request\r\n\r\n"
    },
    {
        "id": "37dfe29593404c76",
        "type": "group",
        "z": "62c6b96ab760ca78",
        "g": "14d2f76b188465c8",
        "name": "Switch node \\n msg.topic matches \\n 'show file'",
        "style": {
            "label": true,
            "label-position": "s",
            "stroke": "none",
            "fill": "none"
        },
        "nodes": [
            "dac6f5642101f3b0"
        ],
        "x": 84,
        "y": 839,
        "w": 172,
        "h": 122
    },
    {
        "id": "ddec69f95434e42a",
        "type": "group",
        "z": "62c6b96ab760ca78",
        "g": "14d2f76b188465c8",
        "name": "Read the filename \\n provided by \\n sending tiddler",
        "style": {
            "stroke": "none",
            "fill": "none",
            "label": true,
            "label-position": "s"
        },
        "nodes": [
            "6ab74c412581482f"
        ],
        "x": 224,
        "y": 839,
        "w": 232,
        "h": 122
    },
    {
        "id": "694cb905ee221edc",
        "type": "group",
        "z": "62c6b96ab760ca78",
        "g": "14d2f76b188465c8",
        "name": "Move file content from \\n msg.payload to msg.filetext",
        "style": {
            "stroke": "none",
            "fill": "none",
            "label": true,
            "label-position": "s"
        },
        "nodes": [
            "1688a65dacdd55fe"
        ],
        "x": 424,
        "y": 839,
        "w": 292,
        "h": 106
    },
    {
        "id": "9e9d7d5d6677e99e",
        "type": "group",
        "z": "62c6b96ab760ca78",
        "g": "14d2f76b188465c8",
        "name": "Template to create \\n tiddler of file contents \\n into msg.payload",
        "style": {
            "stroke": "none",
            "fill": "none",
            "label": true,
            "label-position": "s"
        },
        "nodes": [
            "062e70cc3789a1a1"
        ],
        "x": 684,
        "y": 839,
        "w": 212,
        "h": 122
    },
    {
        "id": "dbbdc46edaf683d5",
        "type": "group",
        "z": "62c6b96ab760ca78",
        "g": "14d2f76b188465c8",
        "name": "The GUI asks for the file path and file type \\n which are placed in tiddler fields \\n sent with the request to Node-Red ",
        "style": {
            "stroke": "none",
            "fill": "none",
            "label": true,
            "label-position": "s"
        },
        "nodes": [
            "9a84940484428484"
        ],
        "x": 304,
        "y": 719,
        "w": 332,
        "h": 122
    },
    {
        "id": "0a11219ac3279f4f",
        "type": "group",
        "z": "62c6b96ab760ca78",
        "g": "f7464a8f5cc4e442",
        "name": "Switch node \\n msg.topic matches \\n 'hello'",
        "style": {
            "label": true,
            "label-position": "s",
            "stroke": "none",
            "fill": "none"
        },
        "nodes": [
            "cdcaa30c8d7b6208"
        ],
        "x": 134,
        "y": 439,
        "w": 152,
        "h": 122
    },
    {
        "id": "ddd1dfc131b74fd7",
        "type": "group",
        "z": "62c6b96ab760ca78",
        "g": "f7464a8f5cc4e442",
        "name": "Template nodes \\n tiddlers in JSON \\n format above \\n .tid format below",
        "style": {
            "label": true,
            "label-position": "s",
            "stroke": "none",
            "fill": "none"
        },
        "nodes": [
            "5516b95ab068d43b"
        ],
        "x": 294,
        "y": 439,
        "w": 192,
        "h": 138
    },
    {
        "id": "122e9298ddc68975",
        "type": "group",
        "z": "62c6b96ab760ca78",
        "g": "f7464a8f5cc4e442",
        "name": "TiddlyWiki 'tiddler parser' node \\n parses text tiddlers into \\n javascript objects",
        "style": {
            "label": true,
            "label-position": "s",
            "stroke": "none",
            "fill": "none"
        },
        "nodes": [
            "2a97f1fbcf6e3dfa"
        ],
        "x": 634,
        "y": 519,
        "w": 197,
        "h": 122
    },
    {
        "id": "c882655e8d51597f",
        "type": "group",
        "z": "62c6b96ab760ca78",
        "g": "f7464a8f5cc4e442",
        "name": "Tiddlywiki \\n 'TW  client  in' \\n Node",
        "style": {
            "label": true,
            "label-position": "s",
            "stroke": "#addb7b",
            "fill": "none"
        },
        "nodes": [
            "07f989c3cdeb14cb"
        ],
        "x": 54,
        "y": 439,
        "w": 86,
        "h": 122
    },
    {
        "id": "c8562eaca2dbbd8d",
        "type": "group",
        "z": "62c6b96ab760ca78",
        "g": "f7464a8f5cc4e442",
        "name": "TiddlyWiki \\n 'TW client out' \\n node",
        "style": {
            "label": true,
            "label-position": "s",
            "stroke": "#7fb7df",
            "fill": "none"
        },
        "nodes": [
            "fd667c5c3ed8286e"
        ],
        "x": 514,
        "y": 439,
        "w": 95,
        "h": 122
    },
    {
        "id": "c423533ded980b73",
        "type": "function",
        "z": "8adf8de645b60e16",
        "name": "From TW Webserver",
        "func": "// see 'On Start' tab for implementation\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nconst $nrMsgNodes = global.get('$nrMsgNodes');\nconst index = $nrMsgNodes.findIndex((element) => element.id === node.id);\n\nif (index > -1) {\n    $nrMsgNodes.splice(index, 1);\n}\n\n$nrMsgNodes.push(node);\n",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "cadd7bb71eeb7243",
        "type": "status",
        "z": "8adf8de645b60e16",
        "name": "",
        "scope": null,
        "x": 140,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "4876804024f936fa",
        "type": "function",
        "z": "83b81066588d5f7b",
        "g": "392b55f1513f4105",
        "name": "To TW Webserver",
        "func": "const repl = global.get('repl'); // REPL context\n\nmsg.payload = repl.$nrParser(msg.payload);\n\n// Send to a specific client\nif (msg.wiki && msg.wiki.req.socketId) {\n\tmsg.payload.forEach(tiddler => {\n\t\tif (tiddler.ioToStory !== undefined) {\n\t\t\tmsg.wiki.riverTitles.push(tiddler.title);\n\t\t\tdelete tiddler.ioToStory;\n\t\t}\n\t\tmsg.wiki.resultTiddlers.push(tiddler);\n\t})\n   repl.$sockets[msg.wiki.req.socketId].socket.emit('msg', msg.wiki);\n}\n// Refresh any client connect to this wiki\nrepl.$refreshClients(msg.wikiname);\n\nreturn;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "5a302b26a3767cb1",
        "type": "function",
        "z": "1d5b93e906f67840",
        "name": "Broadcast to TW Webservers",
        "func": "const repl = global.get('repl');\n\nmsg.payload = repl.$nrParser(msg.payload);\n// Required wiki fields\nmsg.wiki = {req:{sender:''},riverTitles:[],resultTiddlers:[]};\n\nmsg.payload.forEach(tid => {\n\tvar tiddler = Object.assign({}, tid);\n\tif (tiddler.ioToStory !== undefined) {\n\t\tmsg.wiki.riverTitles.push(tiddler.title);\n\t\tdelete tiddler.ioToStory;\n\t}\n\tmsg.wiki.resultTiddlers.push(tiddler);\n})\n// Refresh any client connect to this wiki\nrepl.$broadcastClients(msg.wikiname, msg.wiki);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "edb1d8695ef972b8",
        "type": "status",
        "z": "1d5b93e906f67840",
        "name": "",
        "scope": null,
        "x": 120,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "1b089e0ef2eb4a3e",
        "type": "function",
        "z": "0d3535cb27027846",
        "name": "Parse JSON or .tid tiddlers in msg.payload  \\n into javascript array of tiddler objects",
        "func": "\n// msg.payload transformed into a JavaScript array of tiddler field objects\n//  then appended the tiddlers to be sent back to webserver client\nconst repl = global.get('repl');\n\nmsg.payload = repl.$nrParser(msg.payload);\n\nnode.status(`${msg.payload.length} tiddlers parsed`);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "739878cd3a06c69a",
        "type": "status",
        "z": "0d3535cb27027846",
        "name": "",
        "scope": null,
        "x": 200,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "b7e1909b4d67f4cf",
        "type": "function",
        "z": "295b59907f0d97d2",
        "name": "read tiddlers from wiki",
        "func": "const repl = global.get('repl');\n\nvar wikiname = msg.wikiname || env.get('tw_wikiname');\nvar twfilter = msg.twfilter || env.get('tw_filter');\n\nif (!wikiname || !twfilter) {\n    node.error(`Need both wikiname and twfilter`);\n    node.done();\n    return;\n}\n\nvar isDb = false;\nvar $tw = repl.get$tw(wikiname);\nif (!$tw) {\n    $tw = repl.get$db(wikiname);\n    isDb = true;\n}\n\nif (!$tw) {\n    node.error(`Wiki ${wikiname} is not found`);\n    node.done();\n    return;\n}\n\nmsg.payload = JSON.parse($tw.wiki.getTiddlersAsJson(twfilter));\nnode.status(`'${wikiname}' ${msg.payload.length} tiddlers read`);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "e81be91656e745fa",
        "type": "status",
        "z": "295b59907f0d97d2",
        "name": "",
        "scope": null,
        "x": 120,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "6801d4530f3d9135",
        "type": "function",
        "z": "489223c003015b3f",
        "name": "write tiddlers to wiki",
        "func": "const repl = global.get('repl');\n\nvar wikiname = msg.wikiname || env.get('tw_wikiname');\n\nif (!wikiname) {\n\tnode.error(`Need wikiname to write`);\n\tnode.done();\n\treturn;\n}\n\nconst $tw = repl.get$tw(wikiname);\nif (!$tw) {\n    node.error(`Wiki ${wikiname} is not found`);\n    node.done();\n    return;\n}\n\nmsg.payload = repl.$nrParser(msg.payload);\n\nmsg.payload.forEach(tid => {\n\t// copy so not delete ioToStory on the original\n\tvar tiddler = Object.assign({},tid); \n\tdelete tiddler.ioToStory;\n\trepl.ins$tw(wikiname, tiddler);\n})\n\nrepl.$refreshClients(wikiname);\n\nnode.status(`${msg.payload.length} tiddlers written`);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "24783140a82cde75",
        "type": "status",
        "z": "489223c003015b3f",
        "name": "",
        "scope": null,
        "x": 120,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "4df2c978a7ce6665",
        "type": "debug",
        "z": "62c6b96ab760ca78",
        "g": "f7464a8f5cc4e442",
        "name": "TW message in",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 120,
        "y": 620,
        "wires": []
    },
    {
        "id": "cdcaa30c8d7b6208",
        "type": "switch",
        "z": "62c6b96ab760ca78",
        "g": "0a11219ac3279f4f",
        "name": "hello",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "hello",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 210,
        "y": 480,
        "wires": [
            [
                "80407f300ac7033c",
                "5516b95ab068d43b"
            ]
        ]
    },
    {
        "id": "5516b95ab068d43b",
        "type": "template",
        "z": "62c6b96ab760ca78",
        "g": "ddd1dfc131b74fd7",
        "name": "a few tiddlers",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "[\n    {\n        \"title\": \"My first Node-Red tiddler\",\n        \"text\": \"Your socketId is @@color:aqua; {{wiki.req.socketId}} @@\",\n        \"ioToStory\": \"yes\",\n        \"tags\": \"node-red1\"\n    },\n    {\n        \"title\": \"My second Node-Red tiddler\",\n        \"tags\": \"node-red1\",\n        \"text\": \"Your wiki name is @@border:1px solid aqua; &nbsp;{{wiki.req.wikiName}}&nbsp; @@\"\n    }\n]\n",
        "output": "str",
        "x": 390,
        "y": 480,
        "wires": [
            [
                "fd667c5c3ed8286e"
            ]
        ]
    },
    {
        "id": "2a97f1fbcf6e3dfa",
        "type": "subflow:0d3535cb27027846",
        "z": "62c6b96ab760ca78",
        "g": "122e9298ddc68975",
        "name": "tiddler parser",
        "x": 730,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "de83c426cb05bd04",
        "type": "debug",
        "z": "62c6b96ab760ca78",
        "g": "f7464a8f5cc4e442",
        "name": "TW message out",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 480,
        "wires": []
    },
    {
        "id": "f851efef43d004c1",
        "type": "comment",
        "z": "62c6b96ab760ca78",
        "g": "f7464a8f5cc4e442",
        "name": "<$button actions=\"<<node-red 'hello'>>\"> Hello Node-Red </$button>",
        "info": "",
        "x": 430,
        "y": 400,
        "wires": [],
        "icon": "pocket-io-icons/tiddlywiki-dark.png"
    },
    {
        "id": "80407f300ac7033c",
        "type": "template",
        "z": "62c6b96ab760ca78",
        "g": "f7464a8f5cc4e442",
        "name": ".tid formatted",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\ntitle: I'm a tid formatted tiddler\ntags: node-red1\n\nThis is the text - {{wiki.req.wikiName}} of the tiddler\n+===+\n\ntags: node-red1\ntitle: another tiddler\n\nthis is another one - the +===+ line breaks\ninput into to tiddlers\n+===+\n\n",
        "output": "str",
        "x": 390,
        "y": 620,
        "wires": [
            [
                "fd667c5c3ed8286e"
            ]
        ]
    },
    {
        "id": "fd667c5c3ed8286e",
        "type": "subflow:83b81066588d5f7b",
        "z": "62c6b96ab760ca78",
        "g": "c8562eaca2dbbd8d",
        "name": "",
        "x": 555,
        "y": 480,
        "wires": [
            [
                "de83c426cb05bd04"
            ]
        ],
        "l": false
    },
    {
        "id": "07f989c3cdeb14cb",
        "type": "subflow:8adf8de645b60e16",
        "z": "62c6b96ab760ca78",
        "g": "c882655e8d51597f",
        "name": "",
        "x": 95,
        "y": 480,
        "wires": [
            [
                "cdcaa30c8d7b6208",
                "4df2c978a7ce6665"
            ]
        ],
        "l": false
    },
    {
        "id": "387aee9414b96304",
        "type": "subflow:8adf8de645b60e16",
        "z": "62c6b96ab760ca78",
        "g": "14d2f76b188465c8",
        "name": "",
        "x": 65,
        "y": 880,
        "wires": [
            [
                "dac6f5642101f3b0"
            ]
        ],
        "l": false
    },
    {
        "id": "dac6f5642101f3b0",
        "type": "switch",
        "z": "62c6b96ab760ca78",
        "g": "37dfe29593404c76",
        "name": "show file",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "show file",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 170,
        "y": 880,
        "wires": [
            [
                "6ab74c412581482f"
            ]
        ]
    },
    {
        "id": "6ab74c412581482f",
        "type": "file in",
        "z": "62c6b96ab760ca78",
        "g": "ddec69f95434e42a",
        "name": "read msg.filename",
        "filename": "wiki.senderTiddler.filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 340,
        "y": 880,
        "wires": [
            [
                "1688a65dacdd55fe"
            ]
        ]
    },
    {
        "id": "1688a65dacdd55fe",
        "type": "change",
        "z": "62c6b96ab760ca78",
        "g": "694cb905ee221edc",
        "name": "msg.payload to msg.filetext",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "filetext",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 880,
        "wires": [
            [
                "062e70cc3789a1a1"
            ]
        ]
    },
    {
        "id": "062e70cc3789a1a1",
        "type": "template",
        "z": "62c6b96ab760ca78",
        "g": "9e9d7d5d6677e99e",
        "name": "Create tiddler",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "title: {{{filename}}}\ntype: {{{wiki.senderTiddler.filetype}}}\nioToStory: yes\n\n{{{filetext}}}\n",
        "output": "str",
        "x": 790,
        "y": 880,
        "wires": [
            [
                "38f58f1538e9684a"
            ]
        ]
    },
    {
        "id": "38f58f1538e9684a",
        "type": "subflow:83b81066588d5f7b",
        "z": "62c6b96ab760ca78",
        "g": "14d2f76b188465c8",
        "name": "",
        "x": 905,
        "y": 880,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "9a84940484428484",
        "type": "comment",
        "z": "62c6b96ab760ca78",
        "g": "dbbdc46edaf683d5",
        "name": "{{||hello-nodered-template-show-file}}",
        "info": "",
        "x": 470,
        "y": 760,
        "wires": [],
        "icon": "pocket-io-icons/tiddlywiki-dark.png"
    },
    {
        "id": "8c75cd6c898531c4",
        "type": "inject",
        "z": "62c6b96ab760ca78",
        "name": "msg.wikiname: Home",
        "props": [
            {
                "p": "wikiname",
                "v": "Home",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 200,
        "y": 220,
        "wires": [
            [
                "900a8c6c9eec40f3"
            ]
        ]
    },
    {
        "id": "900a8c6c9eec40f3",
        "type": "function",
        "z": "62c6b96ab760ca78",
        "name": "Display given wiki URL in debug panel",
        "func": "const repl = global.get('repl');\n\nmsg.payload = `Wiki ${msg.wikiname} is ${repl.get$proxy(msg.wikiname).link}`\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 220,
        "wires": [
            [
                "374eafaeec7f78ad"
            ]
        ]
    },
    {
        "id": "d2a0bb33e100a072",
        "type": "template",
        "z": "62c6b96ab760ca78",
        "name": "Tiddler to broadcast",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "title: I'm getting around\nioToStory: yes\n\nSome tiddlers end up everywhere!\n",
        "output": "str",
        "x": 430,
        "y": 60,
        "wires": [
            [
                "65e1ed3d1027e6b8"
            ]
        ]
    },
    {
        "id": "f41d2f96fc126522",
        "type": "inject",
        "z": "62c6b96ab760ca78",
        "name": "msg.wikiname: Home",
        "props": [
            {
                "p": "wikiname",
                "v": "Home",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 200,
        "y": 60,
        "wires": [
            [
                "d2a0bb33e100a072"
            ]
        ]
    },
    {
        "id": "65e1ed3d1027e6b8",
        "type": "subflow:1d5b93e906f67840",
        "z": "62c6b96ab760ca78",
        "name": "",
        "x": 640,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "9aabdf07c3d6afe2",
        "type": "subflow:295b59907f0d97d2",
        "z": "62c6b96ab760ca78",
        "name": "",
        "env": [
            {
                "name": "tw_msg_overrides",
                "type": "bool",
                "value": "false"
            },
            {
                "name": "tw_wikiname",
                "value": "Home",
                "type": "str"
            },
            {
                "name": "tw_filter",
                "value": "[[I'm getting around]]",
                "type": "str"
            }
        ],
        "x": 360,
        "y": 120,
        "wires": [
            [
                "16c21eba33a24f3d"
            ]
        ]
    },
    {
        "id": "991ec7ae344d87c3",
        "type": "inject",
        "z": "62c6b96ab760ca78",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 120,
        "wires": [
            [
                "9aabdf07c3d6afe2"
            ]
        ]
    },
    {
        "id": "16c21eba33a24f3d",
        "type": "subflow:489223c003015b3f",
        "z": "62c6b96ab760ca78",
        "name": "",
        "env": [
            {
                "name": "tw_msg_overrides",
                "type": "bool",
                "value": "false"
            },
            {
                "name": "tw_wikiname",
                "value": "MyWiki",
                "type": "str"
            }
        ],
        "x": 500,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "374eafaeec7f78ad",
        "type": "debug",
        "z": "62c6b96ab760ca78",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 685,
        "y": 220,
        "wires": [],
        "l": false
    },
    {
        "id": "014708f6c0e76350",
        "type": "debug",
        "z": "5b24d6e63acf9047",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 80,
        "wires": []
    },
    {
        "id": "25f77ae45a3b5723",
        "type": "subflow:8adf8de645b60e16",
        "z": "5b24d6e63acf9047",
        "name": "",
        "x": 35,
        "y": 140,
        "wires": [
            [
                "8b17abc06620f4dd"
            ]
        ],
        "l": false
    },
    {
        "id": "e09f2f8c27050cf3",
        "type": "subflow:83b81066588d5f7b",
        "z": "5b24d6e63acf9047",
        "name": "",
        "x": 395,
        "y": 140,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "1732ef7f92556ce7",
        "type": "template",
        "z": "5b24d6e63acf9047",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"title\": \"test it 2\",\n    \"text\": \"some test!!!\"\n}",
        "output": "str",
        "x": 300,
        "y": 140,
        "wires": [
            [
                "e09f2f8c27050cf3"
            ]
        ]
    },
    {
        "id": "8b17abc06620f4dd",
        "type": "switch",
        "z": "5b24d6e63acf9047",
        "name": "Topic 'test'",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "test",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 150,
        "y": 140,
        "wires": [
            [
                "1732ef7f92556ce7"
            ]
        ]
    },
    {
        "id": "e59a16e005eba7dd",
        "type": "http request",
        "z": "5b24d6e63acf9047",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://raspberrypi:3004/tiddlers/[[Pocket-io System]]",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 250,
        "y": 80,
        "wires": [
            [
                "69919df3eb58b68d"
            ]
        ]
    },
    {
        "id": "ffcc7fe816cc5596",
        "type": "inject",
        "z": "5b24d6e63acf9047",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 80,
        "wires": [
            [
                "e59a16e005eba7dd"
            ]
        ]
    },
    {
        "id": "e23e7dc8a5fc4864",
        "type": "inject",
        "z": "5b24d6e63acf9047",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 55,
        "y": 20,
        "wires": [
            [
                "1873a972a27c2906"
            ]
        ],
        "l": false
    },
    {
        "id": "1873a972a27c2906",
        "type": "function",
        "z": "5b24d6e63acf9047",
        "name": "Display REPL prompt after deploy",
        "func": "global.get('repl').$displayPrompt();\nreturn msg;",
        "outputs": 0,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 20,
        "wires": []
    },
    {
        "id": "69919df3eb58b68d",
        "type": "subflow:0d3535cb27027846",
        "z": "5b24d6e63acf9047",
        "name": "",
        "x": 410,
        "y": 80,
        "wires": [
            [
                "014708f6c0e76350"
            ]
        ]
    },
    {
        "id": "7de5076334dee376",
        "type": "subflow:8adf8de645b60e16",
        "z": "5b24d6e63acf9047",
        "name": "",
        "x": 44,
        "y": 200,
        "wires": [
            [
                "76b07d638e1110c9"
            ]
        ],
        "l": false
    },
    {
        "id": "b6ed653b058dab34",
        "type": "subflow:83b81066588d5f7b",
        "z": "5b24d6e63acf9047",
        "name": "",
        "x": 374,
        "y": 200,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "a993d29142a7f5c7",
        "type": "template",
        "z": "5b24d6e63acf9047",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "title: Hi demo 2.2\n\nthis is some test tooooo!!!",
        "output": "str",
        "x": 279,
        "y": 200,
        "wires": [
            [
                "b6ed653b058dab34"
            ]
        ]
    },
    {
        "id": "76b07d638e1110c9",
        "type": "switch",
        "z": "5b24d6e63acf9047",
        "name": "'demo 2'",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "demo 2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 140,
        "y": 200,
        "wires": [
            [
                "a993d29142a7f5c7"
            ]
        ]
    },
    {
        "id": "7dbc9660e316e32f",
        "type": "inject",
        "z": "5b24d6e63acf9047",
        "name": "",
        "props": [
            {
                "p": "wikiname",
                "v": "users",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 280,
        "wires": [
            [
                "91155920dfae832b"
            ]
        ]
    },
    {
        "id": "91155920dfae832b",
        "type": "subflow:295b59907f0d97d2",
        "z": "5b24d6e63acf9047",
        "name": "",
        "x": 240,
        "y": 280,
        "wires": [
            [
                "014708f6c0e76350"
            ]
        ]
    },
    {
        "id": "66ce86cab171196a",
        "type": "subflow:8adf8de645b60e16",
        "z": "966a05f4e1b8dcf0",
        "name": "",
        "x": 135,
        "y": 120,
        "wires": [
            [
                "6ce0b98cad9e43b2"
            ]
        ],
        "l": false
    },
    {
        "id": "c4720ca803554503",
        "type": "subflow:83b81066588d5f7b",
        "z": "966a05f4e1b8dcf0",
        "name": "",
        "x": 665,
        "y": 80,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "6ce0b98cad9e43b2",
        "type": "switch",
        "z": "966a05f4e1b8dcf0",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "new category",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 230,
        "y": 120,
        "wires": [
            [
                "39971eafdfbcc28f"
            ]
        ]
    },
    {
        "id": "39971eafdfbcc28f",
        "type": "function",
        "z": "966a05f4e1b8dcf0",
        "name": "function 1",
        "func": "const repl = global.get('$rt').context;\n\nmsg.context = repl.see$me();\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 80,
        "wires": [
            [
                "1a84981a9915de90"
            ]
        ]
    },
    {
        "id": "1a84981a9915de90",
        "type": "debug",
        "z": "966a05f4e1b8dcf0",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 80,
        "wires": []
    },
    {
        "id": "a61d9ee1c2d18141",
        "type": "inject",
        "z": "966a05f4e1b8dcf0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 40,
        "wires": [
            [
                "39971eafdfbcc28f"
            ]
        ]
    }
]