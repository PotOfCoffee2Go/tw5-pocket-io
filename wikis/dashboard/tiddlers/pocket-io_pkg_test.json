{
    "tiddlers": {
        "Create Plugin": {
            "title": "Create Plugin",
            "caption": "Create Plugin",
            "created": "20250116214131949",
            "creator": "poc2go",
            "modified": "20250117161618806",
            "modifier": "poc2go",
            "tags": "plugin dashboard $:/pocket-io/plugin/dashboard",
            "type": "text/vnd.tiddlywiki",
            "text": "\n{{||plugin-template-create}}\n"
        },
        "plugin": {
            "created": "20250114164318852",
            "text": "|tc-center tc-table-no-border|k\n|@@.poc2go-project-header Plugin Management System @@|\n\n|tc-center tc-table-no-border|k\n|<$checkbox field=\"autoLoad\" checked=\"yes\" unchecked=\"no\" default=\"no\"> Auto load on startup</$checkbox>|\n\n<!-- Comment out templates not applicable for this project -->\n\n<!-- Response to pocket.io requests -->\n{{!!ioResult}}\n\n<<closeTabsButton \"plugin\" \"dashboard\">>\n<<closeTabsButton \"plugin\" \"template\">>\n<<projectUploadButton>>\n<<closeTabsButton \"plugin\" \"code\">>\n<<closeTabsButton \"plugin\" \"info\">>\n<<closeTabsButton \"plugin\" \"docs\">>\n<<topButton>>\n",
            "title": "plugin",
            "creator": "poc2go",
            "modified": "20250121052934524",
            "modifier": "poc2go",
            "tags": "plugin Projects",
            "type": "text/vnd.tiddlywiki",
            "bag": "default",
            "autoLoad": "yes",
            "caption": "Plugin Manager",
            "ioSrcProjectWiki": "GettingStarted",
            "ioError": "",
            "ioResult": "",
            "ioSystem": "GettingStarted",
            "ioAuthor": "",
            "ioPublisher": "",
            "ioSrcProjectList": "$$$project$$$ helloworld plugin project",
            "ioSrcTiddlerList": "",
            "ioType": "application/json",
            "ioVersion": "0.0.0",
            "ioDisplayButtons": "<<resetAllButton>>"
        },
        "plugin-code-builder": {
            "title": "plugin-code-builder",
            "text": "$tpi.topic.pluginBuilder = function (socket, msg) {\n\tvar $tw = get$tw(msg.req.wikiName);\n\tvar sender = cpy(msg.senderTiddler);\n\tsender.ioResult = '';\n\n\tvar $from = get$tw(sender.ioSrcProjectWiki);\n\n\t// Copy plugin tiddlers to REPL tiddlywiki\n\tvar tiddlersQuery = sender.ioSrcProject ? `[tag[${sender.ioSrcProject}]]` : '[[]]';\n\tvar tiddlers = $from.utils.parseJSONSafe($from.wiki.getTiddlersAsJson(tiddlersQuery), []);\n\ttiddlers.forEach(tiddler => {\n\t\t$rw.wiki.addTiddler(new $rw.Tiddler(tiddler));\n\t})\n\n\t// Create plugin information (tabs) tiddlers\n\tvar pluginInfoQuery = `[tag[${sender.ioSrcProject}]tag[info]]`; \n\tvar infoTiddlers = $from.utils.parseJSONSafe($from.wiki.getTiddlersAsJson(pluginInfoQuery), []);\n\tvar names = [], infoTitles = [];\n\tinfoTiddlers.forEach(tiddler => {\n\t\tvar name = tiddler.title.split('/').pop().split('-').pop();\n\t\tnames.push(name);\n\t\ttiddler.title = sender.ioTitle + '/' + name;\n\t\tinfoTitles.push(tiddler.title);\n\t\ttiddler.tags = '';\n\t\t$rw.wiki.addTiddler(new $rw.Tiddler(tiddler));\n\t})\n\n\t// Add the plugin tiddler\n\t$rw.wiki.addTiddler(new $rw.Tiddler(\n\t\t$rw.wiki.getCreationFields(),\n\t\t{\n\t\t\ttitle: sender.ioTitle,\n\t\t\tdependents:\tsender.ioDependents,\n\t\t\tdescription: sender.ioDescription,\n\t\t\tname: sender.ioName,\n\t\t\t'plugin-type': sender.ioPluginType,\n\t\t\ttype: sender.ioType,\n\t\t\tversion: sender.ioVersion,\n\t\t\ttext: JSON.stringify({tiddlers: {}}),\n\t\t\tauthor: sender.ioAuthor,\n\t\t\tlist: $rw.utils.stringifyList(names),\n\t\t\t'plugin-priority': sender.ioPluginPriority,\n\t\t\t'parent-plugin': sender.ioParentPlugin,\n\t\t\tstability: sender.ioStability,\n\t\t\tsource: sender.ioSource\n\t\t},\n\t\t$rw.wiki.getModificationFields()\n\t));\n\n\t// Pack the plugin with the tiddlers\n\tvar srcTiddlerList = $rw.wiki.filterTiddlers(`[tag[${sender.ioSrcProject}]] ${$rw.utils.stringifyList(infoTitles)}`);\n\ttog($rw.utils.repackPlugin(sender.ioTitle, srcTiddlerList));\n\n\t// Move plugin to destination wiki\n\tvar packagedPlugin = JSON.parse($rw.wiki.getTiddlerAsJson(sender.ioTitle));\n\tvar $to = get$tw(sender.ioDstPluginWiki);\n\t$to.wiki.addTiddler(new $to.Tiddler(packagedPlugin));\n\t$rw.wiki.deleteTiddler(sender.ioTitle);\n\n//\t$tpi.fn.io.refreshClients();\n\n\tvar resultText = `Plugin tiddler '${packagedPlugin.title}' updated on wiki '${sender.ioDstPluginWiki}'`;\n\tsender.ioResult = $tpi.fn.formatIoResult(resultText);\n\tmsg.resultTiddlers.push(sender);\n\treturn msg;\n}\n",
            "caption": "builder",
            "created": "20250114164719328",
            "creator": "poc2go",
            "modified": "20250119184039394",
            "modifier": "poc2go",
            "tags": "plugin code $:/pocket-io/plugin/code",
            "type": "application/javascript"
        },
        "plugin-code-checkwikis": {
            "title": "plugin-code-checkwikis",
            "text": "$tpi.topic.pluginCheckWikis = function pluginCheckWikis(socket, msg) {\n\tvar $tw = get$tw(msg.req.wikiName);\n\tvar senderTid = cpy(msg.senderTiddler);\n\tsenderTid.ioResult = '';\n\n\tvar fakeTw = { wiki: { filterTiddlers: () => '' } };\n\tvar $src = get$tw(senderTid.ioSrcPluginWiki) ?? fakeTw;\n\tvar $dst = get$tw(senderTid.ioDstPluginWiki) ?? fakeTw;\n\tvar $prj = get$tw(senderTid.ioSrcProjectWiki) ?? fakeTw;\n\n\tvar wikisTiddler = '$:/temp/pocket-io/plugin/wikis';\n\tvar pluginQuery = '[plugin-type[plugin]]';\n\tvar srcPlugins = $src.wiki.filterTiddlers(pluginQuery);\n\tvar dstPlugins = $dst.wiki.filterTiddlers(pluginQuery);\n\n\tvar projectQuery = '[tag[Projects]]';\n\tvar srcProjects = $prj.wiki.filterTiddlers(projectQuery);\n\t\n\t\n\tmsg.resultTiddlers.push({\n\t\ttitle: wikisTiddler,\n\t\ttext: '',\n\t\tioSrcPlugins: $rw.utils.stringifyList(srcPlugins),\n\t\tioDstPlugins: $rw.utils.stringifyList(dstPlugins),\n\t\tioSrcProjects: $rw.utils.stringifyList(srcProjects),\n\t});\n\n\t// Display on console\n\t// dir(msg.resultTiddlers[0]);\n\t\n\t// Display on client - {{!!ioResult}}\n\tvar responseText = `see [[${wikisTiddler}]]`;\n\tsenderTid.ioResult = $tpi.fn.formatIoResult(responseText);\n\tmsg.resultTiddlers.push(senderTid);\n\treturn msg;\n}",
            "caption": "checkwikis",
            "created": "20250114201545103",
            "modified": "20250115213219345",
            "tags": "plugin code $:/pocket-io/plugin/code",
            "type": "application/javascript"
        },
        "plugin-code-create": {
            "title": "plugin-code-create",
            "text": "$tpi.topic.pluginCreate = function (socket, msg) {\n\tvar $tw = get$tw(msg.req.wikiName);\n\tvar sender = cpy(msg.senderTiddler);\n\tsender.ioError = '';\n\tsender.ioResult = '';\n\n\tif (!sender.ioName && sender.ioSrcProject) {\n\t\tsender.ioName = sender.ioSrcProject;\n\t}\n\tif (!sender.ioSystem && sender.ioSrcProjectWiki) {\n\t\tsender.ioSystem = sender.ioSrcProjectWiki;\n\t}\n\tif (!sender.ioPublisher) {\n\t\tvar userName = msg.filterTiddlers.find(({ title }) => title === \"$:/status/UserName\");\n\t\tsender.ioAuthor = userName ? userName.text : '';\n\t\tsender.ioPublisher = userName ? userName.text : '';\n\t}\n\t\n\tvar fakeTw = { wiki: { filterTiddlers: () => '' } };\n\tvar $prj = get$tw(sender.ioSrcProjectWiki) ?? fakeTw;\n\n\tvar projectQuery = '[tag[Projects]]';\n\tvar srcProjectList = $prj.wiki.filterTiddlers(projectQuery);\n\tvar tiddlersQuery = sender.ioSrcProject ? `[tag[${sender.ioSrcProject}]]` : '[[]]';\n\tvar srcTiddlerList = $prj.wiki.filterTiddlers(tiddlersQuery);\n\n\tsender.ioSrcProjectList = $rw.utils.stringifyList(srcProjectList);\n\tsender.ioSrcTiddlerList = $rw.utils.stringifyList(srcTiddlerList);\n\n\tsender.ioType = 'application/json';\n\tsender.ioVersion = sender.ioVersion || '0.0.0';\n\n\tif (!sender.ioSrcProject) {\n\t\tsender.ioDisplayButtons = '<<resetAllButton>>';\n\t\tmsg.resultTiddlers.push(sender);\n\t\treturn msg;\n\t}\n/*\n\tif (!sender.ioName) {\n\t\tsender.ioError = $tpi.fn.formatIoError('Plugin Name is required');\n\t\tmsg.resultTiddlers.push(sender);\n\t\treturn msg;\n\t}\n\tif (!sender.ioPublisher) {\n\t\tsender.ioError = $tpi.fn.formatIoError('Plugin Publisher is required');\n\t\tmsg.resultTiddlers.push(sender);\n\t\treturn msg;\n\t}\n*/\n\tvar system = sender.ioSystem;\n\tvar name = sender.ioName;\n\tvar publisher = sender.ioPublisher;\n\tsender.ioTitle = `$:/plugins/${publisher}/${system}/${name}`.replace(/\\/\\//g, '/');\n\tsender.ioText = JSON.stringify({tiddlers:{}});\n\tsender.ioPluginType = 'plugin';\n\n\t// Display on client - {{!!ioResult}}\n//\tvar responseText = `see [[${projectTiddler}]]`;\n//\tsender.ioResult = $tpi.fn.formatIoResult(responseText);\n\tsender.ioDisplayButtons = '<<resetAllButton>> <<generateButton>> <<builderButton>>';\n\tmsg.resultTiddlers.push(sender);\n\treturn msg;\n\n}\n",
            "caption": "create",
            "created": "20250114164644672",
            "creator": "poc2go",
            "modified": "20250119213824927",
            "modifier": "poc2go",
            "tags": "plugin code $:/pocket-io/plugin/code",
            "type": "application/javascript"
        },
        "plugin-code-create 1": {
            "title": "plugin-code-create 1",
            "text": "// Create a plugin\n$tpi.topic.xxxpluginCreatexxx = function pluginCreate(socket, msg) {\n\tvar $tw = get$tw(msg.req.wikiName);\n\tvar senderTid = cpy(msg.senderTiddler);\n\tsenderTid.ioResult = '';\n\n\tvar pluginTiddler = '$:/plugins/$$$author$$$/$$$pluginname$$$'\n\t\t.replace('$$$author$$$', senderTid.ioPluginAuthor)\n\t\t.replace('$$$pluginname$$$', senderTid.ioPluginName)\n\t\n\tif (!$tw.wiki.tiddlerExists(pluginTiddler)) {\n\t\t$rw.wiki.addTiddler(new $rw.Tiddler({\n\t\t\t\ttitle: pluginTiddler,\n\t\t\t\tdependents:\t'',\n\t\t\t\tdescription:'',\n\t\t\t\tname: senderTid.ioPluginName,\n\t\t\t\t'plugin-type': 'plugin',\n\t\t\t\ttype: 'application/json',\n\t\t\t\tversion: '0.0.1',\n\t\t\t\ttext: `{\"tiddlers\": {}}`\n\t\t}))\n\t} else {\n\t\tsenderTid.ioResult = $tpi.fn.formatIoResult(`${pluginTiddler} already exists`);\n\t\tmsg.resultTiddlers.push(senderTid);\n\t\treturn msg;\n\t}\n\n\tvar tiddlersJson = $tw.wiki.getTiddlersAsJson(senderTid.ioPluginFilter);\n\n\tvar titles = [];\n\tvar tiddlers = $rw.wiki.deserializeTiddlers(null, tiddlersJson,\n\t\t{title: 'unused'}, {deserializer: 'application/json'});\n\t$rw.utils.each(tiddlers, (tiddler) => {\n\t\t$rw.wiki.addTiddler(new $rw.Tiddler(\n\t\t\ttiddler,\n\t\t\t$rw.wiki.getCreationFields(),\n\t\t\t$rw.wiki.getModificationFields()\n\t\t))\n\t\ttitles.push(tiddler.title);\n\t\t// send system tiddlers to client via sockets\n\t\tif (/^\\$:\\//.test(tiddler.title)) {\n\t\t\tmsg.resultTiddlers.push(tiddler);\n\t\t}\n\t});\n\n\t$rw.utils.repackPlugin(pluginTiddler, titles);\n\n\tmsg.resultTiddlers.push(JSON.parse($rw.wiki.getTiddlerAsJson(pluginTiddler)));\n\n\tsenderTid.ioResult = $tpi.fn.formatIoResult(`Done`);\n\tmsg.resultTiddlers.push(senderTid);\n\treturn msg;\n}\n",
            "caption": "create old",
            "created": "20250116003416141",
            "creator": "poc2go",
            "modified": "20250117064737987",
            "modifier": "poc2go",
            "tags": "plugin code $:/pocket-io/plugin/code",
            "type": "application/javascript"
        },
        "plugin-code-repack": {
            "title": "plugin-code-repack",
            "text": "// Repack a plugin\n$tpi.topic.pluginRepack = function pluginRepack(socket, msg) {\n\tvar $tw = get$tw(msg.req.wikiName);\n\tvar senderTid = cpy(msg.senderTiddler);\n\tsenderTid.ioResult = '';\n\n\tvar pluginTitle = senderTid.ioPluginSelected;\n\n\tif (msg.req.wikiName === 'codebase') {\n\t\tsenderTid.ioResult = $tpi.fn.formatIoResult(`'codebase' not allowed to repack`);\n\t\tmsg.resultTiddlers.push(senderTid);\n\t\treturn msg;\n\t}\n\tif (!$tw.wiki.tiddlerExists(pluginTitle)) {\n\t\tsenderTid.ioResult = $tpi.fn.formatIoResult(`${senderTid.ioPluginSelected} NOT FOUNd`);\n\t\tmsg.resultTiddlers.push(senderTid);\n\t\treturn msg;\n\t}\n\n\tvar tiddlersJson = $tw.wiki.getTiddlersAsJson(senderTid.ioPluginFilter);\n\n\tvar titles = [];\n\tvar tiddlers = $rw.wiki.deserializeTiddlers(null, tiddlersJson,\n\t\t{title: 'unused'}, {deserializer: 'application/json'});\n\t$rw.utils.each(tiddlers, (tiddler) => {\n\t\t$rw.wiki.addTiddler(new $rw.Tiddler(tiddler));\n\t\ttitles.push(tiddler.title);\n\t});\n\n\t$rw.wiki.addTiddler(new $rw.Tiddler(JSON.parse($tw.wiki.getTiddlerAsJson(pluginTitle))));\n\t$rw.utils.repackPlugin(pluginTitle, titles);\n\tmsg.resultTiddlers.push(JSON.parse($rw.wiki.getTiddlerAsJson(pluginTitle)));\n\t\n\ttitles.forEach(title => $rw.wiki.deleteTiddler(title));\n\t$rw.wiki.deleteTiddler(pluginTitle);\n\t\n\tsenderTid.ioResult = $tpi.fn.formatIoResult(`Done`);\n\tmsg.resultTiddlers.push(senderTid);\n\tmsg.req.tostory = true;\n\treturn msg;\n}\n",
            "caption": "repack",
            "created": "20250114164653871",
            "modified": "20250114165055228",
            "tags": "plugin code $:/pocket-io/plugin/code",
            "type": "application/javascript"
        },
        "plugin-code-unpack": {
            "title": "plugin-code-unpack",
            "text": "$tpi.topic.pluginUnpack = function pluginUnpack(socket, msg) {\n\tvar $tw = get$tw(msg.req.wikiName);\n\tvar senderTid = cpy(msg.senderTiddler);\n\tsenderTid.ioResult = '';\n\t\n\tvar pluginData = $tw.wiki.getTiddlerDataCached(senderTid.ioPluginSelected);\n\tif (!pluginData) {\n\t\tsenderTid.ioResult = $tpi.fn.formatIoResult(`Plugin '${senderTid.ioPluginSelected}' not found`);\n\t} else {\n\t\t$tw.utils.each(pluginData.tiddlers,function(tiddler) {\n\t\t\t$tw.wiki.addTiddler(new $tw.Tiddler(tiddler));\n\t\t\t// system tiddlers will be sent via socket\n\t\t\tif (/^\\$:\\//.test(tiddler.title)) {\n\t\t\t\tmsg.resultTiddlers.push(tiddler);\n\t\t\t}\n\t\t});\n\t\tsenderTid.ioResult = $tpi.fn.formatIoResult(`Plugin '${senderTid.ioPluginSelected}' unpacked`);\n\t}\n\n\tmsg.resultTiddlers.push(senderTid);\n\treturn msg;\n}\n",
            "caption": "unpack",
            "created": "20250114164515960",
            "modified": "20250114164616771",
            "tags": "plugin code $:/pocket-io/plugin/code",
            "type": "application/javascript"
        },
        "plugin-docs-help": {
            "title": "plugin-docs-help",
            "caption": "help",
            "created": "20250117080926157",
            "creator": "poc2go",
            "modified": "20250117085659922",
            "modifier": "poc2go",
            "tags": "plugin docs $:/pocket-io/plugin/docs",
            "type": "text/vnd.tiddlywiki",
            "text": "See [[Plugin Fields|https://tiddlywiki.com/static/Plugin%2520Fields.html]] for a description on the fields used to define a TiddlyWiki plugin.\n"
        },
        "plugin-docs-writeup": {
            "title": "plugin-docs-writeup",
            "caption": "writeup",
            "created": "20250114184830810",
            "creator": "poc2go",
            "modified": "20250116214824980",
            "modifier": "poc2go",
            "tags": "plugin docs $:/pocket-io/plugin/docs",
            "type": "text/vnd.tiddlywiki",
            "text": "docs goes here"
        },
        "plugin-info-license": {
            "title": "plugin-info-license",
            "caption": "license",
            "created": "20250117150134944",
            "creator": "poc2go",
            "modified": "20250117150245873",
            "modifier": "poc2go",
            "tags": "plugin info $:/pocket-io/plugin/info",
            "type": "text/vnd.tiddlywiki",
            "text": "@@font-family:Monospace;\n\nMIT No Attribution\n\nCopyright &lt;YEAR> &lt;COPYRIGHT HOLDER>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this\nsoftware and associated documentation files (the \"Software\"), to deal in the Software\nwithout restriction, including without limitation the rights to use, copy, modify,\nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n@@\n"
        },
        "plugin-info-readme": {
            "title": "plugin-info-readme",
            "caption": "readme",
            "created": "20250117150042782",
            "modified": "20250117150042782",
            "tags": "plugin info $:/pocket-io/plugin/info",
            "type": "text/vnd.tiddlywiki",
            "text": "info Plugin Information (ex: readme, license) goes here"
        },
        "plugin-template-create": {
            "created": "20250116213749229",
            "text": "\\define submitResetAll()\n<<pocket-io \"resetIoFields\">>\n\\end\n\n\\define resetAllButton()\n<$button actions=\"<<submitResetAll>>\"> Reset </$button>\n\\end\n\n\\define submitGenerate()\n<<pocket-io \"pluginCreate\" \"[[$:/status/UserName]]\">>\n\\end\n\n\\define generateButton()\n<$button actions=\"<<submitGenerate>>\"> Update </$button>\n\\end\n\n\\define submitBuilder()\n<<pocket-io \"pluginBuilder\">>\n\\end\n\n\\define builderButton()\n<$button actions=\"<<submitBuilder>>\"> Build </$button>\n\\end\n\n\\define helpButton()\n<$button to=\"plugin-docs-help\"> Help </$button>\n\\end\n\n\\define srcWikiSelect()\n<$select field=\"ioSrcProjectWiki\" default=\"\" \nactions=\"<<submitGenerate>>\" >\n<$list filter=\"[list[$:/temp/pocket-io/wikinames]]\">\n<option value={{!!title}} ><$view field='title'/></option>\n</$list></$select>\n\\end\n\n\\define projectSelect()\n<$select field=\"ioSrcProject\" default=\"\" class=\"select-dropdown\"\nactions=\"<<submitGenerate>>\" >\n<$list filter=\"[list[!!ioSrcProjectList]]\">\n<option value={{!!title}} ><$view field='title'/></option>\n</$list></$select>\n\\end\n\n\\define stabilitySelect()\n<$select field=\"ioStability\" default=\"STABILITY_2_STABLE\"\nactions=\"<<submitGenerate>>\" >\n<option value=\"STABILITY_2_STABLE\"> Stable </option>\n<option value=\"STABILITY_1_EXPERIMENTAL\"> Experimental </option>\n<option value=\"STABILITY_3_LEGACY\"> Legacy </option>\n<option value=\"STABILITY_0_DEPRECATED\"> Deprecated </option>\n</$select>\n\\end\n\n\\define dstWikiSelect()\n<$select field=\"ioDstPluginWiki\" default=\"\" \nactions=\"<<submitGenerate>>\" >\n<$list filter=\"[list[$:/temp/pocket-io/wikinames]]\">\n<option value={{!!title}} ><$view field='title'/></option>\n</$list></$select>\n\\end\n\n\\define infoTabs()\n<<tabs \"[tag{!!ioSrcProject}tag[info]]\" >>\n\\end\n\n\\define pluginEditBox(fieldname,placeholder)\n<$edit-text field=\"$fieldname$\" class=\"create-editbox\" placeholder=\"$placeholder$\" />\n\\end\n\n\\define pluginEditAreaBox(fieldname,placeholder)\n<$edit-text field=\"$fieldname$\" class=\"create-editbox\" placeholder=\"$placeholder$\" tag=textarea />\n\\end\n\n<style>\n.create-editbox { width: 200px; }\ntable { border-collapse: separate; border-spacing: .5em; }\n.create-title { width: 500px; }\n.select-dropdown { min-width: 20px; }\n</style>\n\n<<helpButton>> {{!!ioDisplayButtons}}\n\n|tc-table-no-border|k\n| From Wiki|<<srcWikiSelect>> | To Wiki|<<dstWikiSelect>> |\n| Publisher|<<pluginEditBox ioPublisher  'Required'>> | System |<<pluginEditBox ioSystem  'Recommended'>> |\n\n|tc-center tc-table-no-border|k\n| Project <<projectSelect>> |\n| Stability <<stabilitySelect>> |\n\n|tc-table-no-border|k\n|>| <$text text=\"$:/plugins/publisher/system/project\"/> |\n| Title | <$edit-text field=\"ioTitle\" class=\"create-title\" /> |\n| Description|<$edit-text field=\"ioDescription\" class=\"create-title\" />|\n| List |<<pluginEditBox ioList>> |\n|^ Plugin Tabs|<$macrocall $name=\"closeTabsButton\" project={{!!ioSrcProject}} tab=\"info\" /> |\n\n<div style=\"float:left;\">\n\n|tc-table-no-border|k\n| Name |<<pluginEditBox ioName 'Recommended'>> |\n| Author |<<pluginEditBox ioAuthor 'Recommended'>> |\n| Version |<<pluginEditBox ioVersion>> |\n| Text |<<pluginEditBox ioText>> |\n\n{{!!ioError}}\n\n</div>\n<div>\n\n|tc-table-no-border|k\n| Plugin Type |<<pluginEditBox ioPluginType>> |\n| Type |<<pluginEditBox ioType>> |\n| Plugin Priority |<<pluginEditBox ioPluginPriority>> |\n| Dependents |<<pluginEditBox ioDependents>> |\n| Parent Plugin |<<pluginEditBox ioParentPlugin>> |\n| Source |<<pluginEditBox ioSource>> |\n\n</div>\n",
            "title": "plugin-template-create",
            "creator": "poc2go",
            "modified": "20250121052515996",
            "modifier": "poc2go",
            "tags": "plugin $:/pocket-io/plugin/template template",
            "type": "text/vnd.tiddlywiki",
            "bag": "default",
            "caption": "create"
        },
        "plugin-template-test": {
            "title": "plugin-template-test",
            "caption": "test",
            "created": "20250119011212591",
            "modified": "20250119011600603",
            "tags": "plugin $:/pocket-io/plugin/template template",
            "type": "text/vnd.tiddlywiki",
            "text": "\\define pluginBuilderButton()\n<$button actions=\"<<submtBuilder>>\"> Test </$button>\n\\end\n\n\\define submtBuilder()\n<<pocket-io \"pluginBuilder\">>\n\\end\n\n\n|tc-table-no-border|k\n| | <<pluginBuilderButton>> |\n"
        },
        "plugin-template-unpack": {
            "title": "plugin-template-unpack",
            "caption": "unpack",
            "created": "20250114165322723",
            "modified": "20250115094046124",
            "tags": "plugin $:/pocket-io/plugin/template template",
            "type": "text/vnd.tiddlywiki",
            "text": "\\define submitUnpack()\n<<pocket-io \"pluginUnpack\">>\n\\end\n\n\\define submitRepack()\n<<pocket-io \"pluginRepack\">>\n\\end\n\n\\define unpackButton()\n<$button actions=\"<<submitUnpack>>\"> Unpack </$button>\n\\end\n\n\\define repackButton()\n<$button actions=\"<<submitRepack>>\"> Repack </$button>\n\\end\n\n\\define deleteButton()\n<$button actions='<$action-deletetiddler $filter={{Plugin Management!!ioPluginFilter}}/>'>\nDelete unpacked {{Plugin Management!!ioPluginFilter}}\n</$button>\n\\end\n\n|tc-table-no-border|k\n| Plugin |<<unpackButton>> <<repackButton>> <<deleteButton>> |\n"
        },
        "plugin-template-wikis": {
            "title": "plugin-template-wikis",
            "caption": "wikis",
            "created": "20250114191159564",
            "modified": "20250115205817800",
            "tags": "plugin $:/pocket-io/plugin/template template",
            "type": "text/vnd.tiddlywiki",
            "text": "\\define pluginReset()\n<$action-deletetiddler $tiddler='$:/temp/pocket-io/plugin/wikis'/>\n<$action-setfield $field=ioSrcPluginWiki $value=\"\"/>\n<$action-setfield $field=ioDstPluginWiki $value=\"\"/>\n\\end\n\n\\define pluginResetButton()\n<$button actions=\"<<pluginReset>>\"> Reset </$button>\n\\end\n\n\\define submitCheckWikis()\n<<pocket-io \"pluginCheckWikis\">>\n\\end\n\n\\define srcWikiSelect()\n<$select field=\"ioSrcPluginWiki\" default=\"\" \nactions=\"<<submitCheckWikis>>\" >\n<$list filter=\"[list[$:/temp/pocket-io/wikinames]]\">\n<option value={{!!title}} ><$view field='title'/></option>\n</$list></$select>\n\\end\n\n\\define srcPluginSelect()\n<$select field=\"ioSrcPluginSelected\">\n<$list filter='[list[$:/temp/pocket-io/plugin/wikis!!ioSrcPlugins]]'>\n<option><$view field='title'/></option>\n</$list>\n</$select>\n\\end\n\n\\define dstWikiSelect()\n<$select field=\"ioDstPluginWiki\" default=\"\"\nactions=\"<<submitCheckWikis>>\" >\n<$list filter=\"[list[$:/temp/pocket-io/wikinames]] -[[codebase]]\">\n<option value={{!!title}} ><$view field='title'/></option>\n</$list></$select>\n\\end\n\n\\define dstPluginSelect()\n<$select field=\"ioDstPluginSelected\">\n<$list filter='[list[$:/temp/pocket-io/plugin/wikis!!ioDstPlugins]]'>\n<option><$view field='title'/></option>\n</$list>\n</$select>\n\\end\n\n|tc-table-no-border|k\n| | <<pluginResetButton>> |\n|&nbsp;| | |\n|From Wiki |<<srcWikiSelect>> |<<srcPluginSelect>> |\n|&nbsp;| | |\n| To Wiki |<<dstWikiSelect>> |<<dstPluginSelect>> |\n"
        }
    }
}